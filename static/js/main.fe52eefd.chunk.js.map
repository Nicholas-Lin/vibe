{"version":3,"sources":["hash.js","config.js","Components/SubmitButton.js","Components/SoundWave.js","Views/Login.js","Components/Vibe/LineChart.js","Api.js","Components/Vibe/VibeDashboard.js","Components/Mood/PopularityDisplay.js","Components/Mood/DoughnutChart.js","Components/Mood/PercentDisplay.js","Components/Mood/ComparisonsDisplay.js","Components/Mood/Slider.js","Components/Mood/TrackFeaturesDisplay.js","Components/Mood/ImageCarousel.js","Components/Mood/CarouselPlayer.js","Components/Mood/RecentShowcase.js","Components/Mood/MoodDashboard.js","Components/Loading.js","Components/Favorites/ResultItem.js","Components/Favorites/ResultTable.js","Components/Favorites/SearchBar.js","Components/Favorites/FavoritesDisplay.js","Components/Footer.js","Views/MainDisplay.js","App.js","index.js","Assets/cassette.gif"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","loginURL","process","join","SubmitButton","this","props","isLoggedIn","Button","className","variant","onClick","handleLogin","React","Component","SoundWave","Login","Container","Col","duration","delay","href","target","rel","role","aria-label","Chart","defaults","global","defaultFontColor","defaultColor","scale","gridLines","color","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","LineChart","chartRef","createRef","current","type","data","labels","datasets","map","dataset","label","borderColor","borderWidth","fill","backgroundColor","pointBackgroundColor","pointBorderWidth","pointBorderColor","pointRadius","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","options","maintainAspectRatio","tooltips","mode","intersect","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","title","description","ref","Api","api_token","token","time_range","limit","endpoint","axios","get","headers","Authorization","params","response","items","searchTerms","owner","q","res","result","playlists","filter","isTermInName","forEach","term","name","toLowerCase","includes","display_name","id","fields","tracks","features","ids","track","push","results","audio_features","trackFeatures","feature","correspondingTrack","find","popularity","Object","keys","VibeDashboard","state","isLoading","API","requestFeatures","searchForPlaylist","searchResults","Promise","all","a","getPlaylist","year","pop","playlist","setState","getTrackFeatures","playlistFeatures","computeFeatures","getUserFavorites","recentPlaylist","createGraphData","averageFeatures","acousticness","danceability","energy","valence","key","Number","EPSILON","averages","graphData","sortedByYearFeatures","concat","sort","b","localeCompare","unshift","formattedData","topSpotifyDatasets","averageSpotifyDatasets","spanGaps","load","chartDescriptions","fluid","Row","md","PopularityDisplay","score","emoji","ranges","descriptions","emojis","i","lowerBound","upperBound","setTimeout","style","height","value","text","background","backgroundPadding","DoughnutChart","sum","position","responsive","PercentDisplay","arrow","percent","icon","faLongArrowAltDown","size","marginRight","faLongArrowAltUp","rangeSize","floor","abs","ComparisonsDisplay","originalObject","newObject","differences","percentDifference","averageRecentFeatures","recentTracksFeatures","averageComparisonFeatures","comparisonTracksFeatures","comparisonType","calculatePercentDifferences","ButtonGroup","e","handleChange","checked","defaultChecked","Slider","muiTheme","createMuiTheme","overrides","MuiSlider","valueLabel","paddingLeft","thumb","width","rail","OverlayTrigger","placement","overlay","Tooltip","ThemeProvider","theme","valueLabelDisplay","TrackFeaturesDisplay","COLORS","TOOLTIPS","sliders","index","charAt","toUpperCase","slice","ImageCarousel","carouselItems","images","image","Carousel","Item","src","url","alt","indicators","controls","fade","interval","pause","onSelect","handleSlide","activeIndex","CarouselPlayer","trackIsPlaying","nextSlide","trackImages","currentIndex","autoPlay","currentTrack","previewURL","onPlay","handlePlayPause","onPause","onClickPrevious","previousSlide","onClickNext","onEnded","handleEnded","showFilledProgress","showDownloadProgress","showSkipControls","showJumpControls","customProgressBarSection","volume","autoPlayAfterSrcChange","RecentShowcase","bind","newIndex","minHeight","artist","span","order","MoodDashboard","uniqueRecentTracks","showComparison","cycleComparisonTypes","artists","Map","genre","genres","set","val","playlistID","favorites","favoritesFeatures","comparisonTypes","setInterval","indexOf","getRecentTracks","recentTracks","formattedRecentTracks","formattedRecentTrack","liveness","speechiness","instrumentalness","album","preview_url","Array","from","Set","getGenres","popularityScore","top","short_term","medium_term","long_term","getComparisonFeatures","console","log","status","handleTimeout","clearInterval","event","comparisonDescriptor","in","timeout","fontSize","percentages","Loading","display","flexDirection","alignItems","justifyContent","cassette","maxHeight","maxWidth","ResultItem","isPlaying","isHovering","handleMouseHover","playTrack","toggleHoverState","subtitle","searchTerm","termNotInTitle","termNotInSubtitle","resultCoverStyle","backgroundImage","marginLeft","faPlayCircle","onMouseEnter","onMouseLeave","handleClick","uri","ResultTable","currentlyPlaying","activeTrack","document","getElementById","paused","play","currentTime","Audio","setAttribute","onended","append","topType","undefined","external_urls","spotify","alignSelf","SearchBar","placeholder","onChange","timeRange","FavoritesDisplay","MainDisplay","moodDashboardIsLoading","vibeDashboardIsLoading","favoritesDisplayIsLoading","updateLoadingStatus","Fragment","loadMoodDashboard","loadVibeDashboard","loadFavorites","App","_token","access_token","replace","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.fe52eefd.chunk.js","sourcesContent":["/**\n * File Name: hash.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Gets hash parameters from url\n */\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n//window.location.hash = \"\";\n\nexport default hash;\n","/**\n * File Name: config.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Sets up configuration for Spotify OAuth request\n */\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Uses environment variables from .env in root directory\nexport const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nexport const redirectUri = process.env.REACT_APP_REDIRECT_URI;\n\nexport const scopes = [\n  \"playlist-read-private\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n];\nexport const loginURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Button\n          className=\"submit-button\"\n          variant=\"success\"\n          onClick={() => this.props.handleLogin()}\n        >\n          Login with Spotify\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport \"../sound-wave.css\";\n\nfunction SoundWave() {\n  return (\n    <div className=\"sound-icon disabled\">\n      <div className=\"sound-wave\">\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default SoundWave;\n","/**\n * File Name: Login.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Login page and landing page of the website\n */\n\nimport React from \"react\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport SoundWave from \"../Components/SoundWave\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction Login(props) {\n  if (props.isLoggedIn) {\n    return null;\n  }\n  return (\n    <Container>\n      <Col className=\"d-flex align-items-center flex-column login justify-content-center login\">\n        <Fade duration={2000}>\n          <header> Vibe </header>\n          <SoundWave />\n          <Fade delay={1000}>\n            <SubmitButton\n              isLoggedIn={props.isLoggedIn}\n              handleLogin={() => props.handleLogin()}\n            />\n          </Fade>\n\n          <h4 className=\"mt-5\">Get insights into your vibe.</h4>\n          <h6 className=\"mt-5\">\n            {\" \"}\n            Created by{\" \"}\n            <a\n              href=\"https://nicholas-lin.github.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\" \"}\n              Nicholas Lin.{\" \"}\n            </a>{\" \"}\n          </h6>\n          <Fade delay={2000}>\n            <h6>\n              Your information is never stored. Powered by{\" \"}\n              <a\n                href=\"https://developer.spotify.com/documentation/web-api/\"\n                target=\"_blank \"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Spotify's API.{\" \"}\n              </a>{\" \"}\n            </h6>\n\n            <h6>\n              Give this project a{\" \"}\n              <span role=\"img\" aria-label=\"star emoji\">\n                🌟\n              </span>{\" \"}\n              on\n              <a\n                href=\"https://github.com/Nicholas-Lin/vibe\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Github.\n              </a>\n            </h6>\n          </Fade>\n        </Fade>\n      </Col>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\nChart.defaults.global.defaultColor = \"white\";\nChart.defaults.scale.gridLines.color = \"rgb(83,83,83)\";\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw: function (ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      let activePoint = this.chart.tooltip._active[0];\n      let ctx = this.chart.ctx;\n      let x = activePoint.tooltipPosition().x;\n      let topY = this.chart.legend.bottom;\n      let bottomY = this.chart.chartArea.bottom;\n\n      // let meta = this.getMeta();\n      // meta.data.forEach((element) => {\n      //   if (element._model.x === x) {\n      //     topY = element._model.y;\n      //     bottomY = y;\n      //   }\n      // });\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgb(255, 255, 255, 0.5)\";\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    new Chart(this.chartRef.current, {\n      type: \"LineWithLine\",\n      data: {\n        labels: this.props.data.labels,\n        datasets: this.props.data.datasets.map((dataset) => {\n          return {\n            data: dataset.data,\n            label: dataset.label,\n            borderColor: dataset.borderColor,\n            borderWidth: 2,\n            fill: dataset.fill,\n            backgroundColor: dataset.backgroundColor,\n\n            pointBackgroundColor: dataset.borderColor,\n            pointBorderWidth: 1,\n            pointBorderColor: \"black\",\n            pointRadius: 5,\n            pointHitRadius: 6,\n            pointHoverBackgroundColor: \"black\",\n            pointHoverBorderColor: dataset.borderColor,\n          };\n        }),\n      },\n      options: {\n        maintainAspectRatio: false,\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          titleFontColor: \"black\",\n          bodyFontColor: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          callbacks: {\n            label: function (tooltipItem, data) {\n              var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n\n              if (label) {\n                label += \": \";\n              }\n              label += Math.round(tooltipItem.yLabel);\n              return label;\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Col className=\" h-100 d-flex flex-column justify-content-between align-items-center p-0\">\n        <h3>{this.props.title}</h3>\n        <p>{this.props.description}</p>\n        <div className=\"line-chart-container\">\n          <canvas ref={this.chartRef} />\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default LineChart;\n","import axios from \"axios\";\nclass Api {\n  constructor(api_token) {\n    this.token = api_token;\n  }\n\n  /**\n   * Gets users top tracks/artists in a given time range:\n   * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\n   * @param  {string} type - The type of entity to return. Valid values: artists or tracks.\n   * @param {string} time_range - Over what time frame the affinities are computed. Valid values: long_term, medium_term, short_term\n   * @param {number} limit - The number of entities to return. Default: 20. Minimum: 1. Maximum: 50.\n   * @return An array of track or artists objects\n   */\n  async getUserFavorites(type, time_range, limit = 20) {\n    const endpoint = `https://api.spotify.com/v1/me/top/${type}`;\n    const response = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        time_range: time_range,\n        limit: limit,\n      },\n    });\n    return response.data.items;\n  }\n\n  /**\n   * Searches spotify for a playlist given search terms and the owner\n   * @param  {Array<string>} searchTerms - An array of search terms\n   * @param {string} owner - The owner of the playlist\n   * @return playlist object with id and name fields\n   */\n  async searchForPlaylist(searchTerms, owner) {\n    const endpoint = \"https://api.spotify.com/v1/search\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        q: searchTerms.join(\"%20\"),\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n    const result = res.data.playlists.items.filter((item) => {\n      let isTermInName = true;\n      // Checks if search terms are in the name of the playlist\n      searchTerms.forEach((term) => {\n        isTermInName =\n          isTermInName && item.name.toLowerCase().includes(term.toLowerCase());\n      });\n      // If the search terms in name and owner matches playlist owner name return item\n      return (\n        isTermInName &&\n        item.owner.display_name.toLowerCase().includes(owner.toLowerCase())\n      );\n    });\n    return result;\n  }\n\n  /**\n   * Gets details of a playlist given the id\n   * @param  {string} id - The id of the playlist\n   * @return an object containing the name and tracks of the playlist\n   */\n  async getPlaylist(id) {\n    const endpoint = \"https://api.spotify.com/v1/playlists/\";\n    let res = await axios.get(`${endpoint}${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        fields: \"name,tracks.items(track)\",\n      },\n    });\n    return {\n      name: res.data.name,\n      tracks: res.data.tracks.items,\n    };\n  }\n\n  /**\n   * Gets an array of 50 tracks that the user recently played\n   * @return {Array<SimpleTrack>} - An array of simple track objects from Spotify\n   */\n  async getRecentTracks() {\n    const endpoint = \"https://api.spotify.com/v1/me/player/recently-played\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        limit: 50,\n      },\n    });\n    return res.data.items;\n  }\n\n  /**\n   * Gets the features of an array of tracks\n   * @param  {Array<SimpleTrackObject>} tracks - An array of Spotify tracks to analyze\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, valence, and popularity properties\n   */\n  async getTrackFeatures(tracks, features) {\n    let ids = [];\n    tracks.forEach((item) => {\n      if (item.track) {\n        ids.push(item.track.id);\n      } else {\n        ids.push(item.id);\n      }\n    });\n    const endpoint = \"https://api.spotify.com/v1/audio-features\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n\n    res.data.audio_features.forEach((trackFeatures) => {\n      if (!trackFeatures) {\n        return null;\n      }\n      let result = {};\n      features.forEach((feature) => {\n        if (feature === \"popularity\") {\n          const correspondingTrack = tracks.find(\n            (item) =>\n              (item.track ? item.track.id : item.id) === trackFeatures.id\n          );\n          result[feature] = correspondingTrack.track\n            ? correspondingTrack.track.popularity\n            : correspondingTrack.popularity;\n        } else if (\n          trackFeatures &&\n          Object.keys(trackFeatures).includes(feature)\n        ) {\n          result[feature] = trackFeatures[feature];\n        }\n      });\n      results.push(result);\n    });\n    return results;\n  }\n}\n\nexport default Api;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport Api from \"../../Api\";\nimport Fade from \"react-reveal/Fade\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass VibeDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: this.props.token,\n      data: [],\n      features: [],\n      isLoading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const API = new Api(this.props.token);\n    const requestFeatures = [\n      \"id\",\n      \"acousticness\",\n      \"danceability\",\n      \"energy\",\n      \"valence\",\n    ];\n    const searchResults = await API.searchForPlaylist(\n      [\"Your Top Songs\"],\n      \"Spotify\"\n    );\n    await Promise.all(\n      searchResults.map(async (item) => {\n        // If search result is a top track playlist\n        if (item.name.length === 19) {\n          let response = await API.getPlaylist(item.id);\n          const year = response.name.split(\" \").pop();\n          const playlist = {\n            year: year,\n            tracks: response.tracks,\n          };\n          this.setState({\n            data: [...this.state.data, playlist],\n          });\n          const playlistFeatures = await API.getTrackFeatures(\n            playlist.tracks,\n            requestFeatures\n          );\n          this.computeFeatures(year, playlistFeatures);\n        }\n      })\n    );\n    let recentPlaylist = await API.getUserFavorites(\n      \"tracks\",\n      \"medium_term\",\n      50\n    );\n    // Workaround for get track features\n    recentPlaylist = recentPlaylist.map((item) => {\n      return { track: item };\n    });\n    const playlistFeatures = await API.getTrackFeatures(\n      recentPlaylist,\n      requestFeatures\n    );\n    this.computeFeatures(\"2020\", playlistFeatures);\n    this.createGraphData();\n  }\n\n  computeFeatures(year, playlistFeatures) {\n    let averageFeatures = {\n      acousticness: 0,\n      danceability: 0,\n      energy: 0,\n      valence: 0,\n    };\n    playlistFeatures.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          averageFeatures[key] += track[key];\n        }\n      }\n    });\n    for (let key in averageFeatures) {\n      averageFeatures[key] =\n        Math.round(\n          ((averageFeatures[key] * 100) / playlistFeatures.length +\n            Number.EPSILON) *\n            100\n        ) / 100;\n    }\n    this.setState({\n      features: [\n        ...this.state.features,\n        {\n          year: year,\n          averages: averageFeatures,\n        },\n      ],\n    });\n  }\n\n  createGraphData() {\n    let graphData = {\n      acousticness: [],\n      danceability: [],\n      energy: [],\n      valence: [],\n    };\n    let sortedByYearFeatures = []\n      .concat(this.state.features)\n      .sort((a, b) => a.year.localeCompare(b.year));\n\n    // TESTING\n    // sortedByYearFeatures = [\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2019\",\n    //   },\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2020\",\n    //   },\n    // ];\n\n    // console.log(sortedByYearFeatures);\n    sortedByYearFeatures.forEach((year) => {\n      for (let key in year.averages) {\n        graphData[key].push(year.averages[key]);\n      }\n    });\n\n    for (let key in graphData) {\n      while (graphData[key].length < 5) {\n        graphData[key].unshift(null);\n      }\n    }\n\n    // console.log(graphData);\n    let formattedData = {};\n\n    const topSpotifyDatasets = {\n      acousticness: [15.88, 16.63, 19.57, 22.16, 21.39],\n      danceability: [63.25, 69.68, 71.65, 71.38, 71.99],\n      energy: [67.24, 66.07, 65.91, 64.06, 65.05],\n      valence: [45.15, 51.7, 48.44, 54.6, 53.1],\n    };\n\n    const averageSpotifyDatasets = {\n      acousticness: [28.03, 28.99, 27.19, 28.93, 24.74],\n      danceability: [60, 61.23, 66.5, 64.42, 67.31],\n      energy: [59.29, 58.67, 59.06, 57.88, 61.19],\n      valence: [43.08, 41.45, 44.71, 46.59, 48.28],\n    };\n    // console.log(graphData);\n    for (const feature in graphData) {\n      formattedData[feature] = {\n        labels: [\"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\n        datasets: [\n          {\n            data: graphData[feature],\n            label: \"Your Top Songs\",\n            fill: true,\n            borderColor: \"rgba(29,185,84,1)\",\n            backgroundColor: \"rgba(29,185,84,0.4)\",\n            spanGaps: false,\n          },\n          {\n            data: averageSpotifyDatasets[feature],\n            label: \"Average Song\",\n            fill: false,\n            borderColor: \"rgba(255, 255, 255, 0.9)\",\n          },\n          {\n            data: topSpotifyDatasets[feature],\n            label: \"Top Spotify Songs\",\n            fill: false,\n            borderColor: \"rgba(255,99,132,1)\",\n          },\n        ],\n      };\n    }\n    // console.log(formattedData);\n    this.setState({ formattedData: formattedData, isLoading: false });\n    this.props.load();\n  }\n  render() {\n    const chartDescriptions = {\n      valence:\n        \"Valence (positivity) describes how happy, cheerful, and euphoric a track feels, while tracks with low valence tend to sound sad, depressed, or angry.\",\n      danceability:\n        \"Describes how suitable a track is for dancing based on a combination of its tempo, rhythm stability, and beat strength.\",\n      energy:\n        \"Describes how fast, loud, and noisy a track feels. For example, death metal has high energy, while a Bach prelude scores low on the scale.\",\n      acousticness:\n        \"Describes how many more elements of a song are acoustic, as opposed to electric. Songs with a higher score are more likely to be acoustic..\",\n    };\n    return (\n      !this.state.isLoading && (\n        <div>\n          <Container fluid=\"lg\">\n            <Fade>\n              <header>Your Vibe</header>\n              <Row className=\"mt-4 mb-4\">\n                <Col md={6} className=\"mt-4 mb-4\">\n                  <LineChart\n                    title=\"Valence (Happiness)\"\n                    description={chartDescriptions.valence}\n                    data={this.state.formattedData.valence}\n                  />\n                </Col>\n                <Col md={6} className=\"mt-4 mb-4\">\n                  <LineChart\n                    title=\"Danceability\"\n                    description={chartDescriptions.danceability}\n                    data={this.state.formattedData.danceability}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-4\">\n                <Col md={6} className=\"mt-4 mb-4\">\n                  <LineChart\n                    title=\"Energy\"\n                    description={chartDescriptions.energy}\n                    data={this.state.formattedData.energy}\n                  />\n                </Col>\n                <Col md={6} className=\"mt-4 mb-4\">\n                  <LineChart\n                    title=\"Acousticness\"\n                    description={chartDescriptions.acousticness}\n                    data={this.state.formattedData.acousticness}\n                  />\n                </Col>\n              </Row>\n              <hr />\n            </Fade>\n          </Container>\n        </div>\n      )\n    );\n  }\n}\n\nexport default VibeDashboard;\n","import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"./progress-circle.css\";\n\nclass PopularityDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n    };\n  }\n  render() {\n    const ranges = [0, 30, 50, 70, 90, 100];\n    const descriptions = [\n      \"Hipster\",\n      \"Eccentric\",\n      \"Trendy\",\n      \"Mainstream\",\n      \"Basic\",\n    ];\n    const emojis = [\"🧐\", \"🤔\", \"😎\", \"🤩\", \"💁‍♀️\"];\n    let description, emoji;\n\n    for (let i = 0; i < ranges.length - 1; i++) {\n      const lowerBound = ranges[i];\n      const upperBound = ranges[i + 1];\n      if (this.props.score >= lowerBound && this.props.score < upperBound) {\n        description = descriptions[i];\n        emoji = emojis[i];\n        break;\n      }\n    }\n    setTimeout(() => {\n      this.setState({ score: Math.round(this.props.score) });\n    }, 500);\n\n    return (\n      <Col className=\"flex-column justify-content-center popularity-display\">\n        <h3>{`${description} ${emoji}`}</h3>\n        <h4>{\"Popularity Score\"}</h4>\n        <Row className=\"justify-content-center\" style={{ height: \"75%\" }}>\n          <CircularProgressbar\n            value={this.state.score}\n            text={this.state.score}\n            background={true}\n            backgroundPadding={5}\n          />\n        </Row>\n      </Col>\n    );\n  }\n}\n\nexport default PopularityDisplay;\n","import React from \"react\";\nimport Chart from \"chart.js\";\nChart.defaults.global.defaultFontColor = \"white\";\n//Chart.defaults.global.defaultColor = \"white\";\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    const { data } = this.props;\n    const limit = 10;\n    let formattedData = {\n      labels: [],\n      data: [],\n    };\n\n    for (let i = 0; i < data.length && i < limit; i++) {\n      formattedData.labels.push(data[i].key);\n      formattedData.data.push(data[i].value);\n    }\n    if (data.length >= limit) {\n      let sum = 0;\n      for (let i = limit; i < data.length; i++) {\n        sum += data[i].value;\n      }\n      formattedData.labels.push(\"Other\");\n      formattedData.data.push(sum);\n    }\n\n    const sum = formattedData.data.reduce((a, b) => a + b, 0);\n    formattedData.data = formattedData.data.map((item) =>\n      Math.round((item / sum) * 100)\n    );\n\n    new Chart(this.chartRef.current, {\n      type: \"doughnut\",\n      data: {\n        labels: formattedData.labels,\n        datasets: [\n          {\n            label: \"Genres\",\n            backgroundColor: [\n              \"rgba(255, 221, 0, 0.8)\",\n              \"rgba(255, 200, 0, 0.8)\",\n              \"rgba(255,166,0, 0.8)\",\n              \"rgba(255,124,67, 0.8)\",\n              \"rgba(249,93,106, 0.8)\",\n              \"rgba(212,80,135, 0.8)\",\n              \"rgba(160,81,149, 0.8)\",\n              \"rgba(102,81,145, 0.8)\",\n              \"rgba(47,75,124, 0.8)\",\n              \"rgba(29, 52, 130, 0.8)\",\n              \"rgba(10, 36, 66, 0.8)\",\n            ],\n            borderColor: [\n              \"rgba(255, 221, 0, 1)\",\n              \"rgba(255, 200, 0, 1)\",\n              \"rgba(255,166,0, 1)\",\n              \"rgba(255,124,67, 1)\",\n              \"rgba(249,93,106, 1)\",\n              \"rgba(212,80,135, 1)\",\n              \"rgba(160,81,149, 1)\",\n              \"rgba(102,81,145, 1)\",\n              \"rgba(47,75,124, 1)\",\n              \"rgba(29, 52, 130, 1)\",\n              \"rgba(10, 36, 66, 1)\",\n            ],\n            data: formattedData.data,\n          },\n        ],\n      },\n      options: {\n        legend: {\n          position: \"bottom\",\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              return (\n                data[\"labels\"][tooltipItem[\"index\"]] +\n                \": \" +\n                data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] +\n                \"%\"\n              );\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"doughnut-chart-container\">\n        <canvas ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Row from \"react-bootstrap/Row\";\n\nclass PercentDisplay extends Component {\n  render() {\n    let { percent, descriptions, emojis } = this.props;\n    let description = \"\";\n    let arrow, emoji;\n    if (percent < 0) {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltDown}\n          size=\"lg\"\n          color=\"red\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[0];\n    } else if (percent === 0) {\n      description = descriptions[1];\n    } else {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltUp}\n          size=\"lg\"\n          color=\"rgba(73, 209, 0, 1)\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[2];\n    }\n\n    if (percent > 100) {\n      emoji = emojis[emojis.length - 1];\n    } else if (percent < -100) {\n      emoji = emojis[0];\n    } else {\n      const rangeSize = 200 / emojis.length;\n      const index = Math.floor((percent + 100) / rangeSize);\n      emoji = emojis[index];\n    }\n\n    return (\n      <div>\n        <span className=\"emoji\"> {emoji} </span>\n        <Row className=\"d-flex flex-direction-column justify-content-center align-items-center\">\n          {arrow}\n          <h2>{Math.abs(percent)}%</h2>\n        </Row>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nexport default PercentDisplay;\n","import React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n// import Fade from \"react-bootstrap/Fade\";\nimport Fade from \"react-reveal/Fade\";\nimport PercentDisplay from \"./PercentDisplay\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class ComparisonsDisplay extends Component {\n  /**\n   * Computes the averages of an array of features of tracks\n   * @param  {Array<Features>} tracks - An array of track features\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, and valence properties\n   */\n  averageFeatures(tracks) {\n    let averages = {};\n    tracks.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          if (!averages[key]) {\n            averages[key] = track[key];\n          } else {\n            averages[key] += track[key];\n          }\n        }\n      }\n    });\n    for (let key in averages) {\n      averages[key] = averages[key] / tracks.length;\n    }\n    return averages;\n  }\n\n  /**\n   * Returns the percent difference between the properties the newObject compared to the properties of the originalObject.\n   * @param  {Object} originalObject- The original object that will be compared against\n   * @param  {Object} newObject- The new object that will be compared to the original object\n   * @return An object containing the same properties with the percent difference as values\n   */\n  calculatePercentDifferences(originalObject, newObject) {\n    let differences = {};\n    for (const key in originalObject) {\n      const percentDifference = Math.round(\n        ((newObject[key] - originalObject[key]) / originalObject[key]) * 100\n      );\n      differences[key] = percentDifference;\n    }\n    return differences;\n  }\n\n  render() {\n    const averageRecentFeatures = this.averageFeatures(\n      this.props.recentTracksFeatures\n    );\n    const averageComparisonFeatures = this.averageFeatures(\n      this.props.comparisonTracksFeatures[this.props.comparisonType]\n    );\n\n    const differences = this.calculatePercentDifferences(\n      averageComparisonFeatures,\n      averageRecentFeatures\n    );\n\n    const { valence, danceability, energy, acousticness } = differences;\n\n    return (\n      <Fade bottom>\n        <hr />\n        <ButtonGroup className={\"mb-2\"}>\n          <Button\n            variant=\"outline-success\"\n            className={this.props.comparisonType === \"top\" && \"active\"}\n            type=\"radio\"\n            name=\"comparisonType\"\n            value=\"top\"\n            onClick={(e) => this.props.handleChange(e)}\n            checked={this.props.time_range === \"top\"}\n            defaultChecked\n          >\n            Today's Top Hits\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            className={this.props.comparisonType === \"short_term\" && \"active\"}\n            type=\"radio\"\n            name=\"comparisonType\"\n            value=\"short_term\"\n            onClick={(e) => this.props.handleChange(e)}\n            checked={this.props.comparisonType === \"short_term\"}\n          >\n            Last Month\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            className={this.props.comparisonType === \"medium_term\" && \"active\"}\n            type=\"radio\"\n            name=\"comparisonType\"\n            value=\"medium_term\"\n            onClick={(e) => this.props.handleChange(e)}\n            checked={this.props.comparisonType === \"medium_term\"}\n          >\n            Last 6 Months\n          </Button>\n          <Button\n            variant=\"outline-success\"\n            className={this.props.comparisonType === \"long_term\" && \"active\"}\n            type=\"radio\"\n            name=\"comparisonType\"\n            value=\"long_term\"\n            onClick={(e) => this.props.handleChange(e)}\n            checked={this.props.comparisonType === \"long_term\"}\n          >\n            All Time\n          </Button>\n        </ButtonGroup>\n\n        <Row>\n          <Col md={3}>\n            <PercentDisplay\n              percent={valence}\n              descriptions={[\"Less happy\", \"Same hapiness\", \"Happier\"]}\n              emojis={[\"😭\", \"😢\", \"😕\", \"😃\", \"😁\", \"😊\"]}\n            />\n          </Col>\n          <Col md={3}>\n            <PercentDisplay\n              percent={danceability}\n              descriptions={[\n                \"Less danceable\",\n                \"Same danceability\",\n                \"More danceable\",\n              ]}\n              emojis={[\"💃\"]}\n            />\n          </Col>\n          <Col md={3}>\n            <PercentDisplay\n              percent={energy}\n              descriptions={[\"Less energetic\", \"Same energy\", \"More energetic\"]}\n              emojis={[\"😴\", \"⚡️\", \"🔥\"]}\n            />\n          </Col>\n          <Col md={3}>\n            <PercentDisplay\n              percent={acousticness}\n              descriptions={[\n                \"Less acoustic\",\n                \"Same acousticness\",\n                \"More acoustic\",\n              ]}\n              emojis={[\"🎸\", \"🎻\"]}\n            />\n          </Col>\n          <hr />\n        </Row>\n      </Fade>\n    );\n  }\n}\n","/**\n * File Name: Slider.js\n * Author: Nicholas Lin\n * Date: 7/13/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport MUISlider from \"@material-ui/core/Slider\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport \"./slider.css\";\n\nclass Slider extends Component {\n  render() {\n    const { value, title, color, tooltip } = this.props;\n    const muiTheme = createMuiTheme({\n      overrides: {\n        MuiSlider: {\n          valueLabel: {\n            paddingLeft: \"4px\",\n          },\n          thumb: {\n            width: \"15px\",\n            height: \"15px\",\n          },\n          track: {\n            height: \"5px\",\n          },\n          rail: {\n            height: \"5px\",\n            color: \"#b1b1b1\",\n          },\n        },\n      },\n    });\n    const renderTooltip = (props) => <Tooltip {...props}>{tooltip}</Tooltip>;\n\n    return (\n      <div>\n        <span className=\"slider-title\">\n          <OverlayTrigger placement=\"right\" overlay={renderTooltip}>\n            <span className=\"slider-name\">{title}</span>\n          </OverlayTrigger>\n          <span className=\"slider-value\">{value}</span>\n        </span>\n\n        <ThemeProvider theme={muiTheme}>\n          <MUISlider\n            className={`slider--${color}`}\n            value={value}\n            valueLabelDisplay=\"auto\"\n          />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","/**\n * File Name: TrackFeaturesDisplay.js\n * Author: Nicholas Lin\n * Date: 7/13/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport Slider from \"./Slider\";\nimport Col from \"react-bootstrap/Col\";\nclass TrackFeaturesDisplay extends Component {\n  render() {\n    const { track } = this.props;\n    const COLORS = [\n      \"yellow\",\n      \"orange\",\n      \"red\",\n      \"purple\",\n      \"blue\",\n      \"light-blue\",\n      \"aqua\",\n      \"green\",\n    ];\n    const TOOLTIPS = [\n      \"Based on the total number of plays the track has had and how recent those plays are\",\n      \"Describes the musical positiveness conveyed by a track\",\n      \"Describes how suitable a track is for dancing based on tempo, rhythm, beat, etc.\",\n      \"Represents a perceptual measure of intensity and activity\",\n      \"A confidence measure from 0.0 to 1.0 of whether the track is acoustic\",\n      \"Detects the presence of an audience in the recording\",\n      \"Speechiness detects the presence of spoken words in a track\",\n      \"Predicts whether a track contains no vocals\",\n    ];\n    const sliders = [];\n    let index = 0;\n    for (const feature in track.features) {\n      let value = track.features[feature];\n      if (feature !== \"popularity\") {\n        value = Math.round(value * 100);\n      }\n      let title = feature.charAt(0).toUpperCase() + feature.slice(1);\n      if (title === \"Valence\") title = \"Happiness\";\n      sliders.push(\n        <Slider\n          key={`${feature}-slider`}\n          title={title}\n          value={value}\n          color={COLORS[index % COLORS.length]}\n          tooltip={TOOLTIPS[index]}\n        />\n      );\n      index++;\n    }\n\n    return (\n      <Col className=\"d-flex flex-column h-100 justify-content-between p-0\">\n        {sliders}\n      </Col>\n    );\n  }\n}\n\nexport default TrackFeaturesDisplay;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport function ImageCarousel(props) {\n  const carouselItems = props.images.map((image) => (\n    <Carousel.Item key={image.key}>\n      <img src={image.url} alt=\"album cover\" />\n    </Carousel.Item>\n  ));\n  return (\n    <Carousel\n      indicators={false}\n      controls={false}\n      fade={false}\n      interval={props.pause ? null : 5000}\n      onSelect={(e) => props.handleSlide(e)}\n      activeIndex={props.activeIndex}\n    >\n      {carouselItems}\n    </Carousel>\n  );\n}\n","/**\n * File Name: AudioPlayer.js\n * Author: Nicholas Lin\n * Date: 7/13/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport \"./audio-player.css\";\n\nclass CarouselPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trackIsPlaying: false,\n    };\n    //If user plays track => pause carousel\n    //If user skips track while track is playing => go to next slide and play\n    //If user skips track while track is not playing => go to next slide and do not play\n\n    //If user pauses track => resume carousel && do not play next track\n    //If track ends => resume carousel && play next track\n  }\n\n  handlePlayPause(e) {\n    if (e.type === \"play\") {\n      this.setState({ trackIsPlaying: true });\n    } else if (e.type === \"pause\") {\n      this.setState({ trackIsPlaying: false });\n    }\n  }\n\n  handleEnded(e) {\n    this.props.nextSlide(e);\n    this.setState({ trackIsPlaying: true });\n  }\n\n  render() {\n    return (\n      <div>\n        <ImageCarousel\n          images={this.props.trackImages}\n          handleSlide={this.props.handleSlide}\n          pause={this.state.trackIsPlaying}\n          activeIndex={this.props.currentIndex}\n        />\n\n        <AudioPlayer\n          autoPlay={this.state.trackIsPlaying}\n          src={this.props.currentTrack.previewURL}\n          onPlay={(e) => this.handlePlayPause(e)}\n          onPause={(e) => this.handlePlayPause(e)}\n          onClickPrevious={(e) => this.props.previousSlide(e)}\n          onClickNext={(e) => this.props.nextSlide(e)}\n          onEnded={(e) => this.handleEnded(e)}\n          showFilledProgress={false}\n          showDownloadProgress={false}\n          showSkipControls={true}\n          showJumpControls={false}\n          customProgressBarSection={[]}\n          volume={0.3}\n          autoPlayAfterSrcChange={this.state.trackIsPlaying}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CarouselPlayer;\n","/**\n * File Name: RecentShowcase.js\n * Author: Nicholas Lin\n * Date: 7/13/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TrackFeaturesDisplay from \"./TrackFeaturesDisplay\";\n\nimport CarouselPlayer from \"./CarouselPlayer\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport \"./audio-player.css\";\n\nclass RecentShowcase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTrack: this.props.tracks[0],\n      currentIndex: 0,\n    };\n    this.handleSlide = this.handleSlide.bind(this);\n    this.nextSlide = this.nextSlide.bind(this);\n    this.previousSlide = this.previousSlide.bind(this);\n  }\n\n  handleSlide(e) {\n    this.setState({ currentIndex: e, currentTrack: this.props.tracks[e] });\n  }\n\n  nextSlide() {\n    const newIndex = (this.state.currentIndex + 1) % this.props.tracks.length;\n    this.setState({\n      currentIndex: newIndex,\n      currentTrack: this.props.tracks[newIndex],\n    });\n  }\n\n  previousSlide() {\n    const newIndex =\n      this.state.currentIndex === 0\n        ? this.props.tracks.length - 1\n        : this.state.currentIndex - 1;\n    this.setState({\n      currentIndex: newIndex,\n      currentTrack: this.props.tracks[newIndex],\n    });\n  }\n\n  render() {\n    const trackImages = this.props.tracks.map((track) => {\n      return { key: track.id, url: track.image };\n    });\n\n    return (\n      <div>\n        <div style={{ minHeight: \"5em\" }}>\n          <h4>{this.state.currentTrack.name}</h4>\n          <h6>{this.state.currentTrack.artist}</h6>\n        </div>\n        <Row className=\"d-flex justify-content-center mt-2\">\n          <Col\n            md={{ span: 6, order: 2 }}\n            className=\"d-flex flex-column justify-content-center h-100\"\n          >\n            <CarouselPlayer\n              trackImages={trackImages}\n              handleSlide={this.handleSlide}\n              currentTrack={this.state.currentTrack}\n              currentIndex={this.state.currentIndex}\n              nextSlide={this.nextSlide}\n              previousSlide={this.previousSlide}\n            />\n          </Col>\n          <Col md={{ span: 6, order: 1 }}>\n            <TrackFeaturesDisplay track={this.state.currentTrack} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RecentShowcase;\n","/**\n * File Name: MoodDashboard.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Fade from \"react-reveal/Fade\";\nimport BSFade from \"react-bootstrap/Fade\";\n\nimport PopularityDisplay from \"./PopularityDisplay\";\nimport DoughnutChart from \"./DoughnutChart\";\nimport ComparisonsDisplay from \"./ComparisonsDisplay\";\nimport Api from \"../../Api\";\nimport RecentShowcase from \"./RecentShowcase\";\n\nclass MoodDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      comparisonType: \"top\",\n      comparisonTracksFeatures: {},\n      recentTracksFeatures: [],\n      popularity: 0,\n      trackImages: [],\n      uniqueRecentTracks: [],\n      showComparison: true,\n    };\n    this.cycleComparisonTypes.bind(this);\n  }\n\n  /**\n   * Gets the genres for a an array of tracks\n   * @param  {Array<Simple Track Objects>} tracks - The array of tracks to get the genres of\n   * @return An array of objects with key and value properties key=genre, value=track count\n   */\n  async getGenres(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.artists[0].id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/artists\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let map = new Map();\n    res.data.artists.forEach((artist) => {\n      // artist.genres.forEach((genre) => {\n      //   if (map.get(genre)) {\n      //     map.set(genre, map.get(genre) + 1);\n      //   } else {\n      //     map.set(genre, 1);\n      //   }\n      // });\n\n      // Get the first genre category for each song\n      const genre = artist.genres[0];\n      if (genre && map.get(genre)) {\n        map.set(genre, map.get(genre) + 1);\n      } else {\n        map.set(genre, 1);\n      }\n    });\n\n    let results = [];\n    map.forEach((val, key) => {\n      results.push({\n        key: key,\n        value: val,\n      });\n    });\n    // Sort in decreasing value order\n    results.sort((a, b) => b.value - a.value);\n    return results;\n  }\n\n  async getComparisonFeatures(type) {\n    const API = new Api(this.props.token);\n    const requestFeatures = [\n      \"acousticness\",\n      \"danceability\",\n      \"energy\",\n      \"valence\",\n      \"popularity\",\n    ];\n    if (type === \"top\") {\n      const searchResults = await API.searchForPlaylist(\n        [\"Today's top hits\"],\n        \"Spotify\"\n      );\n      const playlistID = searchResults[0].id;\n      const playlist = await API.getPlaylist(playlistID);\n      const playlistFeatures = await API.getTrackFeatures(\n        playlist.tracks,\n        requestFeatures\n      );\n      return playlistFeatures;\n    } else {\n      const favorites = await API.getUserFavorites(\"tracks\", type, 50);\n      const favoritesFeatures = await API.getTrackFeatures(\n        favorites,\n        requestFeatures\n      );\n      return favoritesFeatures;\n    }\n  }\n\n  async cycleComparisonTypes() {\n    const comparisonTypes = [\"top\", \"short_term\", \"medium_term\", \"long_term\"];\n\n    setInterval(async () => {\n      const index = comparisonTypes.indexOf(this.state.comparisonType) + 1;\n      this.setState({ showComparison: false });\n      const comparisonType = comparisonTypes[index % comparisonTypes.length];\n      setTimeout(() => {\n        this.setState({\n          showComparison: true,\n          comparisonType,\n        });\n      }, 500);\n    }, 10000);\n  }\n\n  async componentDidMount() {\n    try {\n      const API = new Api(this.props.token);\n      let requestFeatures = [\n        \"acousticness\",\n        \"danceability\",\n        \"energy\",\n        \"instrumentalness\",\n        \"liveness\",\n        \"speechiness\",\n        \"valence\",\n        \"popularity\",\n      ];\n      const recentTracks = await API.getRecentTracks();\n      const recentTracksFeatures = await API.getTrackFeatures(\n        recentTracks,\n        requestFeatures\n      );\n      let formattedRecentTracks = [];\n      for (let i = 0; i < recentTracks.length; i++) {\n        let formattedRecentTrack = {};\n        const track = recentTracks[i].track;\n        if (!recentTracksFeatures[i]) {\n          continue;\n        }\n        const {\n          popularity,\n          valence,\n          danceability,\n          energy,\n          acousticness,\n          liveness,\n          speechiness,\n          instrumentalness,\n        } = recentTracksFeatures[i];\n\n        formattedRecentTrack = {\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          image: track.album.images[0].url,\n          previewURL: track.preview_url,\n          features: {\n            popularity,\n            valence,\n            danceability,\n            energy,\n            acousticness,\n            liveness,\n            speechiness,\n            instrumentalness,\n          },\n        };\n        formattedRecentTracks.push(formattedRecentTrack);\n      }\n\n      const uniqueRecentTracks = Array.from(\n        new Set(formattedRecentTracks.map((item) => item.id))\n      ).map((id) => {\n        return formattedRecentTracks.find((item) => item.id === id);\n      });\n      const genres = await this.getGenres(recentTracks);\n\n      let popularityScore = 0;\n      recentTracksFeatures.forEach((feature) => {\n        popularityScore += feature.popularity;\n      });\n      popularityScore /= recentTracksFeatures.length;\n\n      let comparisonTracksFeatures = {\n        top: [],\n        short_term: [],\n        medium_term: [],\n        long_term: [],\n      };\n      for (const key in comparisonTracksFeatures) {\n        comparisonTracksFeatures[key] = await this.getComparisonFeatures(key);\n      }\n\n      this.setState({\n        uniqueRecentTracks,\n        recentTracksFeatures: recentTracksFeatures,\n        comparisonTracksFeatures,\n        popularity: popularityScore,\n        genres,\n        isLoading: false,\n      });\n\n      this.props.load();\n      this.cycleComparisonTypes();\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.status === 401)\n        this.props.handleTimeout();\n    }\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  handleChange(event) {\n    const { name, value, type, checked } = event.target;\n    type === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n  }\n\n  render() {\n    let comparisonDescriptor = \"\";\n    switch (this.state.comparisonType) {\n      case \"top\":\n        comparisonDescriptor = \"today's top hits\";\n        break;\n      case \"short_term\":\n        comparisonDescriptor = \"your last month\";\n        break;\n      case \"medium_term\":\n        comparisonDescriptor = \"your last 6 months\";\n        break;\n      case \"long_term\":\n        comparisonDescriptor = \"your all-time favorites\";\n        break;\n      default:\n        break;\n    }\n    return this.state.isLoading ? null : (\n      <div>\n        <Fade>\n          <Col className=\"mood-top-section d-flex flex-column\">\n            <header>Your Mood</header>\n\n            <PopularityDisplay score={this.state.popularity} />\n            <h4>\n              How do your recent songs compare to{\" \"}\n              {/* <CSSTransition in={this.state.showComparison} timeout={500} classNames=\"example\">\n                <span style={{ color: \"#1DB954\" }}>\n                  {comparisonDescriptor}\n                </span>\n              </CSSTransition> */}\n              <BSFade in={this.state.showComparison} timeout={500}>\n                <span style={{ color: \"#1DB954\", fontSize: \"xx-large\" }}>\n                  {comparisonDescriptor}\n                </span>\n              </BSFade>\n              ?\n            </h4>\n\n            <ComparisonsDisplay\n              percentages={this.state.percentages}\n              recentTracksFeatures={this.state.recentTracksFeatures}\n              comparisonTracksFeatures={this.state.comparisonTracksFeatures}\n              comparisonType={this.state.comparisonType}\n              showComparison={this.state.showComparison}\n              handleChange={(e) => this.handleChange(e)}\n            />\n          </Col>\n          <Container fluid className={\"mb-4 mt-2\"}>\n            <RecentShowcase tracks={this.state.uniqueRecentTracks} />\n          </Container>\n\n          <hr />\n          <Container\n            fluid\n            className=\" d-flex flex-column\"\n            style={{ minHeight: \"90vh\" }}\n          >\n            <Row>\n              <Col className=\"justify-content-center\">\n                <h2>{\"Your Recent Genres\"}</h2>\n                <DoughnutChart data={this.state.genres} />\n              </Col>\n            </Row>\n          </Container>\n        </Fade>\n\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default MoodDashboard;\n","import React from \"react\";\nimport cassette from \"../Assets/cassette.gif\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function Loading() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Fade>\n        <img\n          src={cassette}\n          style={{ maxHeight: \"40vh\", maxWidth: \"80vw\" }}\n          alt=\"Cassette spinning loading animation\"\n        />\n        <h1>Loading your vibe...</h1>\n      </Fade>\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../result.css\";\nimport SoundWave from \"../SoundWave\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Fade from \"react-reveal/Fade\";\n\nclass ResultItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      isHovering: false,\n    };\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n  }\n\n  handleClick() {\n    this.props.playTrack(this.props.previewURL);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering,\n    };\n  }\n\n  render() {\n    const {\n      type,\n      position,\n      title,\n      subtitle,\n      searchTerm,\n      image,\n      isPlaying,\n    } = this.props;\n\n    // Track name does not contain the search term\n    const termNotInTitle =\n      title.toLowerCase().indexOf(searchTerm.toLowerCase()) === -1;\n    // Artist name does not contain the search term\n    const termNotInSubtitle =\n      subtitle.toLowerCase().indexOf(searchTerm.toLowerCase()) === -1;\n\n    // If search term not in track then do not render\n    if (termNotInTitle && termNotInSubtitle) {\n      return null;\n    }\n\n    const resultCoverStyle = image\n      ? { backgroundImage: `url(${image})` }\n      : { backgroundColor: \"black\" };\n\n    let item = (\n      <Fade>\n        <div className=\"result-item\">\n          <span className=\"order-number\">{position}</span>\n          <span className=\"result-info\">\n            <span className=\"result-cover\" style={resultCoverStyle}></span>\n            <span className=\"result-summary\">\n              <span className=\"result-artist\">{subtitle}</span>\n              <span className=\"result-name\">{title}</span>\n            </span>\n          </span>\n          <div style={{ marginLeft: \"auto\" }}>\n            {isPlaying ? (\n              <SoundWave />\n            ) : (\n              this.state.isHovering && (\n                <FontAwesomeIcon size=\"3x\" icon={faPlayCircle} />\n              )\n            )}\n          </div>\n        </div>\n      </Fade>\n    );\n\n    if (type === \"track\") {\n      if (this.props.previewURL) {\n        item = (\n          <div\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseHover}\n            onClick={() => this.handleClick()}\n          >\n            {item}\n          </div>\n        );\n      } else {\n        item = (\n          <a\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseHover}\n            href={this.props.uri}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {item}\n          </a>\n        );\n      }\n    } else {\n      item = (\n        <a href={this.props.uri} rel=\"noopener noreferrer\" target=\"_blank\">\n          {item}\n        </a>\n      );\n    }\n\n    return item;\n  }\n}\n\nexport default ResultItem;\n","import React from \"react\";\nimport ResultItem from \"./ResultItem\";\n\nclass ResultTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentlyPlaying: \"\",\n    };\n    this.playTrack = this.playTrack.bind(this);\n  }\n  playTrack(previewURL) {\n    let activeTrack = document.getElementById(\"favorite-player\");\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.setAttribute(\"id\", \"favorite-player\");\n      activeTrack.onended = () => this.setState({ currentlyPlaying: \"\" });\n\n      activeTrack.volume = 0.3;\n      document.getElementById(\"result-table\").append(activeTrack);\n      activeTrack.play();\n      this.setState({ currentlyPlaying: previewURL });\n    } else {\n      if (activeTrack.paused) {\n        activeTrack.play();\n        this.setState({ currentlyPlaying: previewURL });\n      } else {\n        activeTrack.pause();\n        this.setState({ currentlyPlaying: \"\" });\n      }\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n        this.setState({ currentlyPlaying: previewURL });\n      }\n    }\n  }\n\n  render() {\n    let results;\n    if (this.props.topType === \"tracks\") {\n      results = this.props.data.map((track, index) => (\n        <ResultItem\n          type=\"track\"\n          position={index + 1}\n          key={track.id}\n          title={track.name}\n          subtitle={track.artists[0].name}\n          image={\n            track.album.images[0] === undefined\n              ? null\n              : track.album.images[0].url\n          }\n          previewURL={track.preview_url}\n          uri={track.external_urls.spotify}\n          searchTerm={this.props.searchTerm}\n          playTrack={this.playTrack}\n          isPlaying={this.state.currentlyPlaying === track.preview_url}\n        />\n      ));\n    } else {\n      results = this.props.data.map((artist, index) => (\n        <ResultItem\n          type=\"artist\"\n          position={index + 1}\n          key={artist.id}\n          title={artist.name}\n          uri={artist.external_urls.spotify}\n          subtitle={artist.genres.join(\", \")}\n          image={artist.images[0] === undefined ? null : artist.images[0].url}\n          searchTerm={this.props.searchTerm}\n        />\n      ));\n    }\n    return (\n      <div id=\"result-table\">\n        {results ? (\n          results\n        ) : (\n          <h3 className=\"no-results\" style={{ alignSelf: \"center\" }}>\n            No Results\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResultTable;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nclass SearchBar extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Row className=\"d-flex justify-content-between p-4\">\n          <Col md={4} className=\"mb-4\">\n            <input\n              className=\"search-field\"\n              name=\"searchTerm\"\n              value={this.props.searchTerm}\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={(e) => this.props.handleChange(e)}\n            ></input>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"short_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"short_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.time_range === \"short_term\"}\n                defaultChecked\n              >\n                Last Month\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"medium_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"medium_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"medium_term\"}\n              >\n                Last 6 Months\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"long_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"long_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"long_term\"}\n              >\n                All Time\n              </Button>\n            </ButtonGroup>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"tracks\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"tracks\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"tracks\"}\n                defaultChecked\n              >\n                Tracks\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"artists\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"artists\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"artists\"}\n                defaultChecked\n              >\n                Artists\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport ResultTable from \"./ResultTable\";\nimport SearchBar from \"./SearchBar\";\nimport Api from \"../../Api\";\nimport Fade from \"react-reveal/Fade\";\n\nclass FavoritesDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: [],\n      timeRange: \"short_term\",\n      searchTerm: \"\",\n      topType: \"tracks\",\n    };\n  }\n\n  handleChange = async (event) => {\n    const { name, value, type, checked } = event.target;\n    if (name === \"topType\") {\n      this.setState({ data: [] });\n    }\n    (await type) === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n\n    const API = new Api(this.props.token);\n    const response = await API.getUserFavorites(\n      this.state.topType,\n      this.state.timeRange,\n      50\n    );\n    this.setState({ data: response, isLoading: false });\n  };\n\n  async componentDidMount() {\n    const API = new Api(this.props.token);\n    const response = await API.getUserFavorites(\n      this.state.topType,\n      this.state.timeRange,\n      50\n    );\n    this.setState({ data: response, isLoading: false });\n    this.props.load();\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <Fade>\n          <header>Your Favorites</header>\n          <SearchBar\n            handleChange={this.handleChange}\n            timeRange={this.state.timeRange}\n            topType={this.state.topType}\n          />\n        </Fade>\n        <ResultTable\n          topType={this.state.topType}\n          data={this.state.data}\n          searchTerm={this.state.searchTerm}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FavoritesDisplay;\n","import React from \"react\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function Loading() {\n  return (\n    <footer className=\"mt-2 mb-4\">\n      <Fade>\n        <h6>Like what you see?</h6>\n        <h6>\n          Give this project a{\" \"}\n          <span role=\"img\" aria-label=\"star emoji\">\n            🌟\n          </span>{\" \"}\n          on\n          <a\n            href=\"https://github.com/Nicholas-Lin/vibe\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\" \"}\n            Github.\n          </a>\n        </h6>\n        <h6>\n          Share it with your friends{\" \"}\n          <span role=\"img\" aria-label=\"star emoji\">\n            😎\n          </span>\n        </h6>\n      </Fade>\n    </footer>\n  );\n}\n","/**\n * File Name: MainDisplay.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Main display after login\n */\n\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport VibeDashboard from \"../Components/Vibe/VibeDashboard\";\nimport MoodDashboard from \"../Components/Mood/MoodDashboard\";\nimport Loading from \"../Components/Loading\";\nimport FavoritesDisplay from \"../Components/Favorites/FavoritesDisplay\";\nimport Footer from \"../Components/Footer\";\n\nclass MainDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      moodDashboardIsLoading: true,\n      vibeDashboardIsLoading: true,\n      favoritesDisplayIsLoading: true,\n    };\n  }\n\n  /**\n   * Updates the loading status of the component based on loading status of child components\n   */\n  updateLoadingStatus() {\n    if (\n      !this.state.moodDashboardIsLoading &&\n      !this.state.vibeDashboardIsLoading &&\n      !this.state.favoritesDisplayIsLoading\n    ) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  /**\n   * Updates the loading status of the mood dashboard in the state\n   */\n  loadMoodDashboard() {\n    this.setState({\n      moodDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  /**\n   * Updates the loading status of the vibe dashboard in the state\n   */\n  loadVibeDashboard() {\n    this.setState({\n      vibeDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  /**\n   * Updates the loading status of the favorites display in the state\n   */\n  loadFavorites() {\n    this.setState({\n      favoritesDisplayIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading && <Loading />}\n        <Container fluid=\"lg\">\n          <MoodDashboard\n            token={this.props.token}\n            load={() => this.loadMoodDashboard()}\n            handleTimeout={() => this.props.handleTimeout()}\n          />\n\n          <VibeDashboard\n            token={this.props.token}\n            load={() => this.loadVibeDashboard()}\n          />\n          <FavoritesDisplay\n            token={this.props.token}\n            load={() => this.loadFavorites()}\n          />\n          <Footer />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainDisplay;\n","/**\n * File Name: App.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Main entrypoint of react app\n */\n\nimport React from \"react\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport { loginURL } from \"./config\";\nimport Login from \"./Views/Login\";\nimport MainDisplay from \"./Views/MainDisplay\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      token: null,\n    };\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  handleLogin() {\n    window.location.replace(loginURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <Login\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={() => this.handleLogin()}\n          />\n        )}\n        {this.state.token && (\n          <MainDisplay\n            token={this.state.token}\n            handleTimeout={() => this.handleLogin()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/cassette.f720df37.gif\";"],"sourceRoot":""}