{"version":3,"sources":["hash.js","config.js","Components/SubmitButton.js","Components/SoundWave.js","Views/Login.js","Components/TrackItem.js","Components/ArtistItem.js","Components/ResultTable.js","Components/SearchBar.js","Components/LineChart.js","Components/PercentDisplay.js","Components/PopularityDisplay.js","Components/ImageCarousel.js","Components/DoughnutChart.js","Components/MoodDashboard.js","Components/Dashboard.js","App.js","index.js"],"names":["hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","loginURL","join","SubmitButton","this","props","isLoggedIn","Button","className","variant","onClick","handleLogin","React","Component","Login","Container","Col","SoundWave","href","TrackItem","previewURL","playTrack","position","track","searchTerm","albumImgURL","album","images","url","preview_url","termNotInName","name","toLowerCase","indexOf","artists","handleClick","style","backgroundImage","ArtistItem","artist","genres","imgURL","ResultTable","activeTrack","document","querySelector","paused","play","pause","src","currentTime","Audio","volume","getElementById","append","results","topType","topTracks","map","index","key","id","topArtists","alignSelf","SearchBar","initializeData","Row","md","value","type","placeholder","onChange","e","handleChange","ButtonGroup","timeRange","checked","time_range","defaultChecked","Chart","defaults","global","defaultFontColor","defaultColor","scale","gridLines","color","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","y","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","LineChart","chartRef","createRef","current","data","labels","datasets","dataset","label","borderColor","borderWidth","fill","backgroundColor","pointBackgroundColor","pointBorderWidth","pointBorderColor","pointRadius","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","options","tooltips","mode","intersect","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","title","description","ref","width","height","PercentDisplay","arrow","emoji","percent","descriptions","emojis","icon","faLongArrowAltDown","size","marginRight","faLongArrowAltUp","rangeSize","floor","abs","PopularityDisplay","score","ranges","i","viewBox","d","strokeDasharray","textAnchor","dy","ImageCarousel","carouselItems","image","Carousel","Item","indicators","controls","fade","DoughnutChart","formattedData","push","sum","responsive","maintainAspectRatio","MoodDashboard","state","isLoading","percentages","popularity","trackImages","axios","get","headers","Authorization","token","params","limit","res","console","log","items","tracks","ids","forEach","audio_features","trackFeatures","acousticness","danceability","energy","valence","correspondingTrack","find","averages","searchTerms","owner","q","result","playlists","filter","isTermInName","term","includes","display_name","fields","originalObject","newObject","differences","percentDifference","Map","genre","set","val","sort","a","b","getRecentTracks","recentTracks","getTrackFeatures","recentTracksFeatures","averageRecentFeatures","averageFeatures","uniqueTracks","Array","from","Set","getGeneres","searchForPlaylist","searchResults","playlistID","getPlaylist","playlist","playlistFeatures","averagePlaylistFeatures","calculatePercentDifferences","popularityScore","setState","span","order","Dashboard","getTopPlaylists","Promise","all","response","year","pop","computeFeatures","recentPlaylist","createGraphData","features","Number","EPSILON","graphData","sortedByYearFeatures","concat","localeCompare","topSpotifyDatasets","averageSpotifyDatasets","feature","chartDescriptions","display","alignItems","justifyContent","App","event","target","refreshData","getTopArtists","customParams","then","catch","err","getTopTracks","analyzeTopTracks","audioAnalysis","_token","access_token","replace","Fragment","ReactDOM","render"],"mappings":"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","file":"static/js/main.168349a2.chunk.js","sourcesContent":["const hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n//window.location.hash = \"\";\n\nexport default hash;\n","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"03448805c58d4c5ba555ea203c8ce771\";\nexport const redirectUri = \"http://nicholas-lin.github.io/vibe/\";\n// export const redirectUri = \"http://localhost:3000/\";\nexport const scopes = [\n  \"playlist-read-private\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n];\nexport const loginURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Button\n          className=\"submit-button\"\n          variant=\"success\"\n          onClick={() => this.props.handleLogin()}\n        >\n          Login with Spotify\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport \"../sound-wave.css\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <div className=\"sound-icon disabled\">\n        <div className=\"sound-wave\">\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n          <i className=\"bar\"></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport SoundWave from \"../Components/SoundWave\";\n\nclass Login extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <Container>\n        <Col className=\"d-flex align-items-center flex-column login justify-content-center\">\n          <header> Vibe </header>\n          <SoundWave />\n          <SubmitButton\n            isLoggedIn={this.props.isLoggedIn}\n            handleLogin={() => this.props.handleLogin()}\n          />\n          <h5 className=\"mt-5\">Get insights into your vibe.</h5>\n          <h6 className=\"mt-5\">Your information will not be stored.</h6>\n          <h6>\n            {\" \"}\n            Created by{\" \"}\n            <a href=\"https://nicholas-lin.github.io/\"> Nicholas Lin. </a>{\" \"}\n            Powered by{\" \"}\n            <a href=\"https://developer.spotify.com/documentation/web-api/\">\n              {\" \"}\n              Spotify's API.{\" \"}\n            </a>{\" \"}\n          </h6>\n        </Col>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../track.css\"\n\nclass TrackItem extends React.Component {\n\n    handleClick(previewURL) {\n        this.props.playTrack(previewURL)\n    }\n\n    render() {\n        const { position, track, searchTerm } = this.props;\n        const albumImgURL = track.album.images[0].url;\n        const previewURL = track.preview_url;\n\n        // Track name does not contain the search term\n        const termNotInName = track.name.toLowerCase().indexOf(searchTerm) === -1\n        // Artist name does not contain the search term\n        const termNotInArtist = track.artists[0].name.toLowerCase().indexOf(searchTerm) === -1\n\n        // If search term not in track then do not render\n        if (termNotInArtist && termNotInName) {\n            return null;\n        }\n\n        return (\n            <div onClick={() => this.handleClick(previewURL)}>\n                <a className=\"track-history-item\">\n                    <span className=\"order-number\">{position}</span>\n                    <span className=\"track-info\">\n                        <span className=\"track-cover\" style={{ backgroundImage: `url(${albumImgURL})` }}></span>\n                        <span className=\"track-summary\">\n                            <span className=\"track-artist\">{track.artists[0].name}</span>\n                            <span className=\"track-name\">{track.name}</span>\n                        </span>\n                    </span>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default TrackItem","import React from \"react\";\nimport \"../track.css\"\n\nclass ArtistItem extends React.Component {\n\n    render() {\n        const { position, artist, searchTerm } = this.props;\n        let { name, genres} = artist;\n        const imgURL = artist.images[0].url;\n\n\n        genres = genres.join(\", \");\n\n        // Track name does not contain the search term\n        const termNotInName = name.toLowerCase().indexOf(searchTerm) === -1\n        // Genres do not contain the search term\n        const termNotInGenres = genres.toLowerCase().indexOf(searchTerm) === -1\n\n        // If search term not in track then do not render\n        if (termNotInGenres && termNotInName) {\n            return null;\n        }\n\n        return (\n            <div>\n                <a className=\"track-history-item\">\n                    <span className=\"order-number\">{position}</span>\n                    <span className=\"track-info\">\n                        <span className=\"track-cover\" style={{ backgroundImage: `url(${imgURL})` }}></span>\n                        <span className=\"track-summary\">\n                            <span className=\"track-artist\">{genres}</span>\n                            <span className=\"track-name\">{name}</span>\n                        </span>\n                    </span>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default ArtistItem","import React from \"react\";\nimport TrackItem from \"./TrackItem\";\nimport ArtistItem from \"./ArtistItem\";\nimport Container from \"react-bootstrap/Container\";\nimport \"../index.css\";\n\nclass ResultTable extends React.Component {\n  playTrack(previewURL) {\n    let activeTrack = document.querySelector(\"audio\");\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.volume = 0.25;\n      document.getElementById(\"result-table\").append(activeTrack);\n      activeTrack.play();\n    } else {\n      activeTrack.paused ? activeTrack.play() : activeTrack.pause();\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n      }\n    }\n  }\n\n  render() {\n    let results;\n    if (this.props.topType === \"tracks\") {\n      results = this.props.topTracks.map((track, index) => (\n        <TrackItem\n          position={index + 1}\n          key={track.id}\n          track={track}\n          searchTerm={this.props.searchTerm}\n          playTrack={this.playTrack}\n        />\n      ));\n    } else {\n      results = this.props.topArtists.map((artist, index) => (\n        <ArtistItem\n          position={index + 1}\n          key={artist.id}\n          artist={artist}\n          searchTerm={this.props.searchTerm}\n        />\n      ));\n    }\n    return (\n      <div id=\"result-table\">\n        {results ? (\n          results\n        ) : (\n          <h3 className=\"no-results\" style={{ alignSelf: \"center\" }}>\n            No Results\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResultTable;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nclass SearchBar extends React.Component {\n  componentDidMount() {\n    this.props.initializeData();\n  }\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Row className=\"d-flex justify-content-between p-4\">\n          <Col md={4} className=\"mb-4\">\n            <input\n              className=\"search-field\"\n              name=\"searchTerm\"\n              value={this.props.searchTerm}\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={(e) => this.props.handleChange(e)}\n            ></input>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"short_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"short_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.time_range === \"short_term\"}\n                defaultChecked\n              >\n                Last Month\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"medium_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"medium_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"medium_term\"}\n              >\n                Last 6 Months\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"long_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"long_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"long_term\"}\n              >\n                All Time\n              </Button>\n            </ButtonGroup>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"tracks\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"tracks\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"tracks\"}\n                defaultChecked\n              >\n                Tracks\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"artists\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"artists\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"artists\"}\n                defaultChecked\n              >\n                Artists\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\nChart.defaults.global.defaultColor = \"white\";\nChart.defaults.scale.gridLines.color = \"rgb(83,83,83)\";\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw: function (ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      let activePoint = this.chart.tooltip._active[0];\n      let ctx = this.chart.ctx;\n      let x = activePoint.tooltipPosition().x;\n      let y = activePoint.tooltipPosition().y;\n      let topY = this.chart.legend.bottom;\n      let bottomY = this.chart.chartArea.bottom;\n\n      // let meta = this.getMeta();\n      // meta.data.forEach((element) => {\n      //   if (element._model.x === x) {\n      //     topY = element._model.y;\n      //     bottomY = y;\n      //   }\n      // });\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgb(255, 255, 255, 0.5)\";\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    new Chart(this.chartRef.current, {\n      type: \"LineWithLine\",\n      data: {\n        labels: this.props.data.labels,\n        datasets: this.props.data.datasets.map((dataset) => {\n          return {\n            data: dataset.data,\n            label: dataset.label,\n            borderColor: dataset.borderColor,\n            borderWidth: 2,\n            fill: dataset.fill,\n            backgroundColor: dataset.backgroundColor,\n\n            pointBackgroundColor: dataset.borderColor,\n            pointBorderWidth: 1,\n            pointBorderColor: \"black\",\n            pointRadius: 5,\n            pointHitRadius: 6,\n            pointHoverBackgroundColor: \"black\",\n            pointHoverBorderColor: dataset.borderColor,\n          };\n        }),\n      },\n      options: {\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          titleFontColor: \"black\",\n          bodyFontColor: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          callbacks: {\n            label: function (tooltipItem, data) {\n              var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n\n              if (label) {\n                label += \": \";\n              }\n              label += Math.round(tooltipItem.yLabel);\n              return label;\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Col className=\" h-100 d-flex flex-column justify-content-between align-items-center p-0\">\n        <h3>{this.props.title}</h3>\n        <p>{this.props.description}</p>\n        <canvas ref={this.chartRef} width=\"400\" height=\"300\" />\n      </Col>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass PercentDisplay extends Component {\n  render() {\n    let { percent, descriptions, emojis } = this.props;\n    let description = \"\";\n    let arrow, emoji;\n    if (percent < 0) {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltDown}\n          size=\"lg\"\n          color=\"red\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[0];\n    } else if (percent == 0) {\n      description = descriptions[1];\n    } else {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltUp}\n          size=\"lg\"\n          color=\"rgba(73, 209, 0, 1)\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[2];\n    }\n\n    const rangeSize = 200 / emojis.length;\n    const index = Math.floor((percent + 100) / rangeSize);\n    emoji = emojis[index];\n\n    percent = Math.abs(percent);\n\n    return (\n      <div>\n        <span className=\"emoji\"> {emoji} </span>\n        <Row className=\"d-flex flex-direction-column justify-content-center align-items-center\">\n          {arrow}\n          <h1>{percent}%</h1>\n        </Row>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nexport default PercentDisplay;\n","import React, { Component } from \"react\";\nimport \"../progress-circle.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass PopularityDisplay extends Component {\n  render() {\n    let { score } = this.props;\n    const ranges = [0, 30, 50, 70, 90, 100];\n    const descriptions = [\n      \"Hipster\",\n      \"Eccentric\",\n      \"Trendy\",\n      \"Mainstream\",\n      \"Basic\",\n    ];\n    const emojis = [\"🧐\", \"🤔\", \"😎\", \"🤩\", \"💁‍♀️\"];\n    let description, emoji;\n\n    for (let i = 0; i < ranges.length - 1; i++) {\n      const lowerBound = ranges[i];\n      const upperBound = ranges[i + 1];\n      if (score >= lowerBound && score < upperBound) {\n        description = descriptions[i];\n        emoji = emojis[i];\n        break;\n      }\n    }\n\n    return (\n      <Col className=\"d-flex flex-column justify-content-center h-100\">\n        <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n          <path\n            className=\"circle-bg\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <path\n            className=\"circle\"\n            strokeDasharray=\"60, 100\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".35em\"\n            className=\"percentage\"\n          >\n            {Math.round(score)}\n          </text>\n        </svg>\n        <h2>{\"Popularity Score:\"}</h2>\n        <h2>{`${description} ${emoji}`}</h2>\n      </Col>\n    );\n  }\n}\n\nexport default PopularityDisplay;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport function ImageCarousel(props) {\n  const carouselItems = props.images.map((image) => (\n    <Carousel.Item key={image.id}>\n      <img className=\"d-block w-100\" src={image.url} />\n    </Carousel.Item>\n  ));\n  return (\n    <Carousel indicators={false} controls={false} fade={false}>\n      {carouselItems}\n    </Carousel>\n  );\n}\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\n//Chart.defaults.global.defaultColor = \"white\";\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    const { data } = this.props;\n    const limit = 10;\n    let formattedData = {\n      labels: [],\n      data: [],\n    };\n\n    for (let i = 0; i < data.length && i < limit; i++) {\n      formattedData.labels.push(data[i].key);\n      formattedData.data.push(data[i].value);\n    }\n    if (data.length >= limit) {\n      let sum = 0;\n      for (let i = limit; i < data.length; i++) {\n        sum += data[i].value;\n      }\n      formattedData.labels.push(\"Other\");\n      formattedData.data.push(sum);\n    }\n\n    new Chart(this.chartRef.current, {\n      type: \"doughnut\",\n      data: {\n        labels: formattedData.labels,\n        datasets: [\n          {\n            label: \"Genres\",\n            backgroundColor: [\n              \"rgba(255, 221, 0, 0.8)\",\n              \"rgba(255, 200, 0, 0.8)\",\n              \"rgba(255,166,0, 0.8)\",\n              \"rgba(255,124,67, 0.8)\",\n              \"rgba(249,93,106, 0.8)\",\n              \"rgba(212,80,135, 0.8)\",\n              \"rgba(160,81,149, 0.8)\",\n              \"rgba(102,81,145, 0.8)\",\n              \"rgba(47,75,124, 0.8)\",\n              \"rgba(29, 52, 130, 0.8)\",\n              \"rgba(10, 36, 66, 0.8)\",\n            ],\n            borderColor: [\n              \"rgba(255, 221, 0, 1)\",\n              \"rgba(255, 200, 0, 1)\",\n              \"rgba(255,166,0, 1)\",\n              \"rgba(255,124,67, 1)\",\n              \"rgba(249,93,106, 1)\",\n              \"rgba(212,80,135, 1)\",\n              \"rgba(160,81,149, 1)\",\n              \"rgba(102,81,145, 1)\",\n              \"rgba(47,75,124, 1)\",\n              \"rgba(29, 52, 130, 1)\",\n              \"rgba(10, 36, 66, 1)\",\n            ],\n            data: formattedData.data,\n          },\n        ],\n      },\n      options: {\n        legend: {\n          position: \"bottom\",\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              return (\n                data[\"labels\"][tooltipItem[\"index\"]] +\n                \": \" +\n                data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] +\n                \"%\"\n              );\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"chart-container\">\n        <canvas ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nimport PercentDisplay from \"./PercentDisplay\";\nimport PopularityDisplay from \"./PopularityDisplay\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport DoughnutChart from \"./DoughnutChart\";\n\nclass MoodDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      percentages: {},\n      popularity: 0,\n      trackImages: [],\n    };\n  }\n\n  /**\n   * Gets an array of 50 tracks that the user recently played\n   * @return {Array<SimpleTrack>} - An array of simple track objects from Spotify\n   */\n  async getRecentTracks() {\n    const endpoint = \"https://api.spotify.com/v1/me/player/recently-played\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        limit: 50,\n      },\n    });\n    console.log(res.data.items);\n    return res.data.items;\n  }\n\n  /**\n   * Gets the features of an array of tracks\n   * @param  {Array<SimpleTrackObject>} tracks - An array of Spotify tracks to analyze\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, valence, and popularity properties\n   */\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/audio-features\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((trackFeatures) => {\n      const { id, acousticness, danceability, energy, valence } = trackFeatures;\n      const correspondingTrack = tracks.find((item) => item.track.id === id);\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n        popularity: correspondingTrack.track.popularity,\n      });\n    });\n\n    return results;\n  }\n\n  /**\n   * Computes the averages of an array of features of tracks\n   * @param  {Array<Features>} tracks - An array of track features\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, and valence properties\n   */\n  averageFeatures(tracks) {\n    let averages = {};\n    tracks.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          if (!averages[key]) {\n            averages[key] = track[key];\n          } else {\n            averages[key] += track[key];\n          }\n        }\n      }\n    });\n    for (let key in averages) {\n      averages[key] = averages[key] / tracks.length;\n    }\n    return averages;\n  }\n\n  /**\n   * Searches spotify for a playlist given search terms and the owner\n   * @param  {Array<string>} searchTerms - An array of search terms\n   * @param {string} owner - The owner of the playlist\n   * @return playlist object with id and name fields\n   */\n  async searchForPlaylist(searchTerms, owner) {\n    const endpoint = \"https://api.spotify.com/v1/search\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        q: searchTerms.join(\"%20\"),\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n    const result = res.data.playlists.items.filter((item) => {\n      let isTermInName = true;\n      // Checks if search terms are in the name of the playlist\n      searchTerms.forEach((term) => {\n        isTermInName =\n          isTermInName && item.name.toLowerCase().includes(term.toLowerCase());\n      });\n      // If the search terms in name and owner matches playlist owner name return item\n      return (\n        isTermInName &&\n        item.owner.display_name.toLowerCase().includes(owner.toLowerCase())\n      );\n    });\n    return result;\n  }\n\n  /**\n   * Gets details of a playlist given the id\n   * @param  {string} id - The id of the playlist\n   * @return an object containing the name and tracks of the playlist\n   */\n  async getPlaylist(id) {\n    const endpoint = \"https://api.spotify.com/v1/playlists/\";\n    let res = await axios.get(`${endpoint}${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        fields: \"name,tracks.items(track)\",\n      },\n    });\n    return {\n      name: res.data.name,\n      tracks: res.data.tracks.items,\n    };\n  }\n\n  /**\n   * Returns the percent difference between the properties the newObject compared to the properties of the originalObject.\n   * @param  {Object} originalObject- The original object that will be compared against\n   * @param  {Object} newObject- The new object that will be compared to the original object\n   * @return An object containing the same properties with the percent difference as values\n   */\n  calculatePercentDifferences(originalObject, newObject) {\n    let differences = {};\n    for (const key in originalObject) {\n      const percentDifference = Math.round(\n        ((newObject[key] - originalObject[key]) / originalObject[key]) * 100\n      );\n      differences[key] = percentDifference;\n    }\n    return differences;\n  }\n\n  async getGeneres(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.artists[0].id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/artists\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let map = new Map();\n    res.data.artists.forEach((artist) => {\n      //   artist.genres.forEach((genre) => {\n      //     if (map.get(genre)) {\n      //       map.set(genre, map.get(genre) + 1);\n      //     } else {\n      //       map.set(genre, 1);\n      //     }\n      //   });\n      const genre = artist.genres[0];\n      if (genre && map.get(genre)) {\n        map.set(genre, map.get(genre) + 1);\n      } else {\n        map.set(genre, 1);\n      }\n    });\n\n    let results = [];\n    map.forEach((val, key) => {\n      results.push({\n        key: key,\n        value: val,\n      });\n    });\n    // Sort in decreasing value order\n    results.sort((a, b) => b.value - a.value);\n    return results;\n  }\n\n  async componentDidMount() {\n    const recentTracks = await this.getRecentTracks();\n    const recentTracksFeatures = await this.getTrackFeatures(recentTracks);\n    const averageRecentFeatures = this.averageFeatures(recentTracksFeatures);\n\n    const uniqueTracks = Array.from(\n      new Set(recentTracks.map((item) => item.track.id))\n    ).map((id) => {\n      return recentTracks.find((item) => item.track.id === id);\n    });\n    console.log(uniqueTracks);\n    const trackImages = uniqueTracks.map((item) => {\n      return {\n        id: item.track.id,\n        url: item.track.album.images[0].url,\n      };\n    });\n\n    const genres = await this.getGeneres(recentTracks);\n\n    const searchResults = await this.searchForPlaylist(\n      [\"Today's top hits\"],\n      \"Spotify\"\n    );\n    const playlistID = searchResults[0].id;\n    const playlist = await this.getPlaylist(playlistID);\n    const playlistFeatures = await this.getTrackFeatures(playlist.tracks);\n    const averagePlaylistFeatures = this.averageFeatures(playlistFeatures);\n    const differences = this.calculatePercentDifferences(\n      averagePlaylistFeatures,\n      averageRecentFeatures\n    );\n    const popularityScore = averageRecentFeatures.popularity;\n    this.setState({\n      percentages: differences,\n      popularity: popularityScore,\n      trackImages: trackImages,\n      genres: genres,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <header>Your Mood</header>\n        <Container>\n          <h3>How do your recent songs compare to today's top hits?</h3>\n          <Row className=\"justify-content-center\">\n            <Col\n              md={{ span: 6, order: 2 }}\n              className=\"d-flex flex-column justify-content-center h-100\"\n            >\n              <ImageCarousel images={this.state.trackImages} />\n            </Col>\n            <Col md={{ span: 6, order: 1 }}>\n              <PopularityDisplay score={this.state.popularity} />\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col md={3}>\n              <PercentDisplay\n                percent={this.state.percentages.valence}\n                descriptions={[\"Less happy\", \"Same hapiness\", \"Happier\"]}\n                emojis={[\"😭\", \"😢\", \"😕\", \"😃\", \"😁\", \"😊\"]}\n              />\n            </Col>\n            <Col md={3}>\n              <PercentDisplay\n                percent={this.state.percentages.danceability}\n                descriptions={[\n                  \"Less danceable\",\n                  \"Same danceability\",\n                  \"More danceable\",\n                ]}\n                emojis={[\"💃\"]}\n              />\n            </Col>\n            <Col md={3}>\n              <PercentDisplay\n                percent={this.state.percentages.energy}\n                descriptions={[\n                  \"Less energetic\",\n                  \"Same energy\",\n                  \"More energetic\",\n                ]}\n                emojis={[\"😴\", \"⚡️\", \"🔥\"]}\n              />\n            </Col>\n            <Col md={3}>\n              <PercentDisplay\n                percent={this.state.percentages.acousticness}\n                descriptions={[\n                  \"Less acoustic\",\n                  \"Same acousticness\",\n                  \"More acoustic\",\n                ]}\n                emojis={[\"🎸\", \"🎻\"]}\n              />\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col className=\"justify-content-center\">\n              <h2>{\"Your Top Genres\"}</h2>\n              <DoughnutChart data={this.state.genres} />\n            </Col>\n          </Row>\n          <hr />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default MoodDashboard;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport axios from \"axios\";\nimport SoundWave from \"./SoundWave\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport MoodDashboard from \"./MoodDashboard\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: this.props.token,\n      data: [],\n      features: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getTopPlaylists();\n  }\n\n  getTopPlaylists = async () => {\n    let res = await axios.get(\"\thttps://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        q: \"Your%20Top%20Songs\",\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n\n    let playlistRequests = [];\n    await Promise.all(\n      res.data.playlists.items.map(async (item) => {\n        // If search result is a top track playlist\n        if (item.name.length === 19 && item.owner.display_name === \"Spotify\") {\n          let response = await axios.get(\n            `https://api.spotify.com/v1/playlists/${item.id}`,\n            {\n              headers: {\n                Authorization: `Bearer ${this.state.token}`,\n              },\n              params: {\n                fields: \"name,tracks.items(track)\",\n              },\n            }\n          );\n          const year = response.data.name.split(\" \").pop();\n          const playlist = {\n            year: year,\n            tracks: response.data.tracks.items,\n          };\n          this.setState({\n            data: [...this.state.data, playlist],\n          });\n          const playlistFeatures = await this.getTrackFeatures(playlist.tracks);\n          this.computeFeatures(year, playlistFeatures);\n        }\n      })\n    );\n    let recentPlaylist = await axios.get(\n      \"https://api.spotify.com/v1/me/top/tracks\",\n      {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`,\n        },\n        params: {\n          time_range: \"medium_term\",\n          limit: 50,\n        },\n      }\n    );\n    const playlistFeatures = await this.getTrackFeatures(\n      recentPlaylist.data.items\n    );\n    this.computeFeatures(\"2020\", playlistFeatures);\n    this.createGraphData();\n    console.log(this.state.features);\n    console.log(this.state.data);\n  };\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      if (item.track) ids.push(item.track.id);\n      else ids.push(item.id);\n    });\n    let res = await axios.get(\"https://api.spotify.com/v1/audio-features\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((track) => {\n      const { id, acousticness, danceability, energy, valence } = track;\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n      });\n    });\n    return results;\n  }\n\n  computeFeatures(year, playlistFeatures) {\n    let averageFeatures = {\n      acousticness: 0,\n      danceability: 0,\n      energy: 0,\n      valence: 0,\n    };\n    playlistFeatures.forEach((track) => {\n      for (let key in track) {\n        if (key != \"id\") {\n          averageFeatures[key] += track[key];\n        }\n      }\n    });\n    for (let key in averageFeatures) {\n      averageFeatures[key] =\n        Math.round(\n          ((averageFeatures[key] * 100) / playlistFeatures.length +\n            Number.EPSILON) *\n            100\n        ) / 100;\n    }\n    this.setState({\n      features: [\n        ...this.state.features,\n        {\n          year: year,\n          averages: averageFeatures,\n        },\n      ],\n    });\n  }\n\n  createGraphData() {\n    let graphData = {\n      acousticness: [],\n      danceability: [],\n      energy: [],\n      valence: [],\n    };\n    let sortedByYearFeatures = []\n      .concat(this.state.features)\n      .sort((a, b) => a.year.localeCompare(b.year));\n\n    sortedByYearFeatures.forEach((year) => {\n      for (let key in year.averages) {\n        graphData[key].push(year.averages[key]);\n      }\n    });\n    let formattedData = {};\n\n    const topSpotifyDatasets = {\n      acousticness: [15.88, 16.63, 19.57, 22.16, 21.39],\n      danceability: [63.25, 69.68, 71.65, 71.38, 71.99],\n      energy: [67.24, 66.07, 65.91, 64.06, 65.05],\n      valence: [45.15, 51.7, 48.44, 54.6, 53.1],\n    };\n\n    // const averageSpotifyDatasets = {\n    //   acousticness: [25.49, 25.49, 25.49, 25.49, 25.49],\n    //   danceability: [59.14, 59.14, 59.14, 59.14, 59.14],\n    //   energy: [64.57, 64.57, 64.57, 64.57, 64.57],\n    //   valence: [49.21, 49.21, 49.21, 49.21, 49.21],\n    // };\n\n    const averageSpotifyDatasets = {\n      acousticness: [28.03, 28.99, 27.19, 28.93, 24.74],\n      danceability: [60, 61.23, 66.5, 64.42, 67.31],\n      energy: [59.29, 58.67, 59.06, 57.88, 61.19],\n      valence: [43.08, 41.45, 44.71, 46.59, 48.28],\n    };\n\n    for (const feature in graphData) {\n      formattedData[feature] = {\n        labels: sortedByYearFeatures.map((playlist) => playlist.year),\n        datasets: [\n          {\n            data: graphData[feature],\n            label: \"Your Top Songs\",\n            fill: true,\n            borderColor: \"rgba(29,185,84,1)\",\n            backgroundColor: \"rgba(29,185,84,0.4)\",\n          },\n          {\n            data: averageSpotifyDatasets[feature],\n            label: \"Average Song\",\n            fill: false,\n            borderColor: \"rgba(255, 255, 255, 0.9)\",\n          },\n          {\n            data: topSpotifyDatasets[feature],\n            label: \"Top Spotify Songs\",\n            fill: false,\n            borderColor: \"rgba(255,99,132,1)\",\n          },\n        ],\n      };\n    }\n    this.setState({ formattedData: formattedData, isLoading: false });\n  }\n  render() {\n    const chartDescriptions = {\n      valence:\n        \"Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive, while tracks with low valence sound more negative.\",\n      danceability:\n        \"Describes how suitable a track is for dancing based on a combination of musical elements.\",\n      energy:\n        \"Represents a perceptual measure of intensity and activity based on dynamic range, general entropy, etc.\",\n      acousticness:\n        \"A confidence measure from 0 to 100 of whether the track is acoustic. 100 represents high confidence the track is acoustic.\",\n    };\n    return this.state.isLoading ? (\n      <div\n        style={{\n          height: \"90vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <SoundWave />\n      </div>\n    ) : (\n      <div>\n        <Container>\n          <header>Your Vibe</header>\n          <Row className=\"mb-4\">\n            <Col md={6} className=\"mb-4\">\n              <LineChart\n                title=\"Valence (Happiness)\"\n                description={chartDescriptions.valence}\n                data={this.state.formattedData.valence}\n              />\n            </Col>\n            <Col md={6} className=\"mb-4\">\n              <LineChart\n                title=\"Danceability\"\n                description={chartDescriptions.danceability}\n                data={this.state.formattedData.danceability}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col md={6} className=\"mb-4\">\n              <LineChart\n                title=\"Energy\"\n                description={chartDescriptions.energy}\n                data={this.state.formattedData.energy}\n              />\n            </Col>\n            <Col md={6} className=\"mb-4\">\n              <LineChart\n                title=\"Acousticness\"\n                description={chartDescriptions.acousticness}\n                data={this.state.formattedData.acousticness}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport { loginURL } from \"./config\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\n\nimport Login from \"./Views/Login\";\nimport ResultTable from \"./Components/ResultTable\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Dashboard from \"./Components/Dashboard\";\nimport MoodDashboard from \"./Components/MoodDashboard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      token: null,\n      topTracks: [],\n      topArtists: [],\n      audioAnalysis: [],\n      timeRange: \"short_term\",\n      searchTerm: \"\",\n      topType: \"tracks\",\n    };\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  handleLogin() {\n    console.log(loginURL);\n    window.location.replace(loginURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  handleChange = async (event) => {\n    const { name, value, type, checked } = event.target;\n    (await type) === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n    if (name === \"timeRange\") {\n      this.refreshData();\n    }\n  };\n\n  getTopArtists = async () => {\n    let customParams = {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        time_range: this.state.timeRange,\n        limit: 50,\n      },\n    };\n    await axios\n      .get(\"https://api.spotify.com/v1/me/top/artists\", customParams)\n      .then((res) => {\n        this.setState({ topArtists: res.data.items });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getTopTracks = async () => {\n    await axios\n      .get(\"https://api.spotify.com/v1/me/top/tracks\", {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`,\n        },\n        params: {\n          time_range: this.state.timeRange,\n          limit: 50,\n        },\n      })\n      .then((res) => {\n        this.setState({ topTracks: res.data.items });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    await this.analyzeTopTracks();\n  };\n\n  analyzeTopTracks = async () => {\n    let ids = [];\n    this.state.topTracks.forEach((track) => {\n      ids.push(track.id);\n    });\n\n    let customParams = {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    };\n    await axios\n      .get(\"https://api.spotify.com/v1/audio-features\", customParams)\n      .then((res) => {\n        res.data.audio_features.forEach((track) => {\n          const { id, acousticness, danceability, energy, valence } = track;\n          this.setState({\n            audioAnalysis: [\n              ...this.state.audioAnalysis,\n              {\n                id: id,\n                acousticness: acousticness,\n                danceability: danceability,\n                energy: energy,\n                valence: valence,\n              },\n            ],\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  refreshData = () => {\n    this.getTopArtists();\n    this.getTopTracks();\n  };\n\n  initializeData = () => {\n    this.getTopArtists();\n    this.getTopTracks();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <Login\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={() => this.handleLogin()}\n          />\n        )}\n        {this.state.token && (\n          <React.Fragment>\n            <Container>\n              <MoodDashboard token={this.state.token} />\n              <Dashboard\n                handleChange={this.handleChange}\n                initializeData={this.initializeData}\n                token={this.state.token}\n              />\n              <hr />\n              <header>Your Favorites</header>\n\n              <SearchBar\n                handleChange={this.handleChange}\n                timeRange={this.state.timeRange}\n                topType={this.state.topType}\n                initializeData={this.initializeData}\n              />\n              <ResultTable\n                topType={this.state.topType}\n                topTracks={this.state.topTracks}\n                topArtists={this.state.topArtists}\n                searchTerm={this.state.searchTerm}\n              />\n            </Container>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}