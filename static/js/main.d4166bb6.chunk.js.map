{"version":3,"sources":["Assets/cassette.gif","hash.js","config.js","Components/SubmitButton.js","Components/SoundWave.js","Views/Login.js","Components/Vibe/LineChart.js","Components/Vibe/VibeDashboard.js","Components/Mood/PopularityDisplay.js","Components/Mood/ImageCarousel.js","Components/Mood/DoughnutChart.js","Components/Mood/PercentDisplay.js","Components/Mood/FeaturesDisplay.js","Components/Mood/MoodDashboard.js","Components/Loading.js","Components/Favorites/ResultItem.js","Components/Favorites/ResultTable.js","Components/Favorites/SearchBar.js","Components/Favorites/FavoritesDisplay.js","Views/MainDisplay.js","App.js","index.js"],"names":["module","exports","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","loginURL","process","join","SubmitButton","this","props","isLoggedIn","Button","className","variant","onClick","handleLogin","React","Component","SoundWave","Login","Container","Col","href","Chart","defaults","global","defaultFontColor","defaultColor","scale","gridLines","color","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","LineChart","chartRef","createRef","current","type","data","labels","datasets","map","dataset","label","borderColor","borderWidth","fill","backgroundColor","pointBackgroundColor","pointBorderWidth","pointBorderColor","pointRadius","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","options","maintainAspectRatio","tooltips","mode","intersect","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","title","description","ref","VibeDashboard","getTopPlaylists","a","axios","get","headers","Authorization","state","token","params","q","limit","res","Promise","all","playlists","items","name","owner","display_name","id","fields","response","year","pop","playlist","tracks","setState","getTrackFeatures","playlistFeatures","computeFeatures","time_range","recentPlaylist","createGraphData","features","isLoading","ids","forEach","track","push","results","audio_features","acousticness","danceability","energy","valence","averageFeatures","key","Number","EPSILON","averages","graphData","sortedByYearFeatures","concat","sort","b","localeCompare","console","log","unshift","formattedData","topSpotifyDatasets","averageSpotifyDatasets","feature","spanGaps","load","chartDescriptions","fluid","Row","md","PopularityDisplay","emoji","score","ranges","descriptions","emojis","i","viewBox","d","strokeDasharray","y","textAnchor","dy","ImageCarousel","carouselItems","images","image","Carousel","Item","src","url","alt","indicators","controls","fade","DoughnutChart","value","sum","position","responsive","PercentDisplay","arrow","percent","icon","faLongArrowAltDown","size","style","marginRight","faLongArrowAltUp","rangeSize","floor","abs","FeaturesDisplay","percentages","MoodDashboard","popularity","trackImages","trackFeatures","correspondingTrack","find","searchTerms","result","filter","isTermInName","term","toLowerCase","includes","originalObject","newObject","differences","percentDifference","artists","Map","artist","genre","genres","set","val","getRecentTracks","recentTracks","recentTracksFeatures","averageRecentFeatures","uniqueTracks","Array","from","Set","album","getGeneres","searchForPlaylist","searchResults","playlistID","getPlaylist","averagePlaylistFeatures","calculatePercentDifferences","popularityScore","handleTimeout","span","order","minHeight","Loading","height","display","flexDirection","alignItems","justifyContent","cassette","maxHeight","maxWidth","ResultItem","subtitle","searchTerm","previewURL","termNotInTitle","indexOf","termNotInSubtitle","backgroundImage","playTrack","ResultTable","activeTrack","document","querySelector","paused","play","pause","currentTime","Audio","volume","getElementById","append","topType","topTracks","index","preview_url","topArtists","alignSelf","SearchBar","placeholder","onChange","e","handleChange","ButtonGroup","timeRange","checked","defaultChecked","FavoritesDisplay","event","target","refreshData","getTopArtists","getTopTracks","audioAnalysis","MainDisplay","moodDashboardIsLoading","vibeDashboardIsLoading","favoritesDisplayIsLoading","updateLoadingStatus","Fragment","loadMoodDashboard","loadVibeDashboard","loadFavorites","App","_token","access_token","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.d4166bb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cassette.f720df37.gif\";","const hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nexport const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nexport const redirectUri = process.env.REACT_APP_REDIRECT_URI;\n\nexport const scopes = [\n  \"playlist-read-private\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n];\nexport const loginURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Button\n          className=\"submit-button\"\n          variant=\"success\"\n          onClick={() => this.props.handleLogin()}\n        >\n          Login with Spotify\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport \"../sound-wave.css\";\n\nfunction SoundWave() {\n  return (\n    <div className=\"sound-icon disabled\">\n      <div className=\"sound-wave\">\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default SoundWave;\n","import React from \"react\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport SoundWave from \"../Components/SoundWave\";\n\nexport default function Login(props) {\n  if (props.isLoggedIn) {\n    return null;\n  }\n  return (\n    <Container>\n      <Col className=\"d-flex align-items-center flex-column login justify-content-center\">\n        <header> Vibe </header>\n        <SoundWave />\n        <SubmitButton\n          isLoggedIn={props.isLoggedIn}\n          handleLogin={() => props.handleLogin()}\n        />\n        <h5 className=\"mt-5\">Get insights into your vibe.</h5>\n        <h6 className=\"mt-5\">Your information will not be stored.</h6>\n        <h6>\n          {\" \"}\n            Created by{\" \"}\n          <a href=\"https://nicholas-lin.github.io/\"> Nicholas Lin. </a>{\" \"}\n            Powered by{\" \"}\n          <a href=\"https://developer.spotify.com/documentation/web-api/\">\n            {\" \"}\n              Spotify's API.{\" \"}\n          </a>{\" \"}\n        </h6>\n      </Col>\n    </Container>\n  );\n}\n\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\nChart.defaults.global.defaultColor = \"white\";\nChart.defaults.scale.gridLines.color = \"rgb(83,83,83)\";\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw: function (ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      let activePoint = this.chart.tooltip._active[0];\n      let ctx = this.chart.ctx;\n      let x = activePoint.tooltipPosition().x;\n      let topY = this.chart.legend.bottom;\n      let bottomY = this.chart.chartArea.bottom;\n\n      // let meta = this.getMeta();\n      // meta.data.forEach((element) => {\n      //   if (element._model.x === x) {\n      //     topY = element._model.y;\n      //     bottomY = y;\n      //   }\n      // });\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgb(255, 255, 255, 0.5)\";\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    new Chart(this.chartRef.current, {\n      type: \"LineWithLine\",\n      data: {\n        labels: this.props.data.labels,\n        datasets: this.props.data.datasets.map((dataset) => {\n          return {\n            data: dataset.data,\n            label: dataset.label,\n            borderColor: dataset.borderColor,\n            borderWidth: 2,\n            fill: dataset.fill,\n            backgroundColor: dataset.backgroundColor,\n\n            pointBackgroundColor: dataset.borderColor,\n            pointBorderWidth: 1,\n            pointBorderColor: \"black\",\n            pointRadius: 5,\n            pointHitRadius: 6,\n            pointHoverBackgroundColor: \"black\",\n            pointHoverBorderColor: dataset.borderColor,\n          };\n        }),\n      },\n      options: {\n        maintainAspectRatio: false,\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          titleFontColor: \"black\",\n          bodyFontColor: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          callbacks: {\n            label: function (tooltipItem, data) {\n              var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n\n              if (label) {\n                label += \": \";\n              }\n              label += Math.round(tooltipItem.yLabel);\n              return label;\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Col className=\" h-100 d-flex flex-column justify-content-between align-items-center p-0\">\n        <h3>{this.props.title}</h3>\n        <p>{this.props.description}</p>\n        <div className=\"line-chart-container\">\n          <canvas ref={this.chartRef} />\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass VibeDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: this.props.token,\n      data: [],\n      features: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getTopPlaylists();\n  }\n\n  getTopPlaylists = async () => {\n    let res = await axios.get(\"\thttps://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        q: \"Your Top Songs\",\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n\n    await Promise.all(\n      res.data.playlists.items.map(async (item) => {\n        // If search result is a top track playlist\n        if (item.name.length === 19 && item.owner.display_name === \"Spotify\") {\n          let response = await axios.get(\n            `https://api.spotify.com/v1/playlists/${item.id}`,\n            {\n              headers: {\n                Authorization: `Bearer ${this.state.token}`,\n              },\n              params: {\n                fields: \"name,tracks.items(track)\",\n              },\n            }\n          );\n          const year = response.data.name.split(\" \").pop();\n          const playlist = {\n            year: year,\n            tracks: response.data.tracks.items,\n          };\n          this.setState({\n            data: [...this.state.data, playlist],\n          });\n          const playlistFeatures = await this.getTrackFeatures(playlist.tracks);\n          this.computeFeatures(year, playlistFeatures);\n        }\n      })\n    );\n    let recentPlaylist = await axios.get(\n      \"https://api.spotify.com/v1/me/top/tracks\",\n      {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`,\n        },\n        params: {\n          time_range: \"medium_term\",\n          limit: 50,\n        },\n      }\n    );\n    const playlistFeatures = await this.getTrackFeatures(\n      recentPlaylist.data.items\n    );\n    this.computeFeatures(\"2020\", playlistFeatures);\n    this.createGraphData();\n  };\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      if (item.track) ids.push(item.track.id);\n      else ids.push(item.id);\n    });\n    let res = await axios.get(\"https://api.spotify.com/v1/audio-features\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((track) => {\n      const { id, acousticness, danceability, energy, valence } = track;\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n      });\n    });\n    return results;\n  }\n\n  computeFeatures(year, playlistFeatures) {\n    let averageFeatures = {\n      acousticness: 0,\n      danceability: 0,\n      energy: 0,\n      valence: 0,\n    };\n    playlistFeatures.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          averageFeatures[key] += track[key];\n        }\n      }\n    });\n    for (let key in averageFeatures) {\n      averageFeatures[key] =\n        Math.round(\n          ((averageFeatures[key] * 100) / playlistFeatures.length +\n            Number.EPSILON) *\n            100\n        ) / 100;\n    }\n    this.setState({\n      features: [\n        ...this.state.features,\n        {\n          year: year,\n          averages: averageFeatures,\n        },\n      ],\n    });\n  }\n\n  createGraphData() {\n    let graphData = {\n      acousticness: [],\n      danceability: [],\n      energy: [],\n      valence: [],\n    };\n    let sortedByYearFeatures = []\n      .concat(this.state.features)\n      .sort((a, b) => a.year.localeCompare(b.year));\n\n    // TESTING\n    // sortedByYearFeatures = [\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2019\",\n    //   },\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2020\",\n    //   },\n    // ];\n\n    console.log(sortedByYearFeatures);\n    sortedByYearFeatures.forEach((year) => {\n      for (let key in year.averages) {\n        graphData[key].push(year.averages[key]);\n      }\n    });\n\n    for (let key in graphData) {\n      while (graphData[key].length < 5) {\n        graphData[key].unshift(null);\n      }\n    }\n\n    console.log(graphData);\n    let formattedData = {};\n\n    const topSpotifyDatasets = {\n      acousticness: [15.88, 16.63, 19.57, 22.16, 21.39],\n      danceability: [63.25, 69.68, 71.65, 71.38, 71.99],\n      energy: [67.24, 66.07, 65.91, 64.06, 65.05],\n      valence: [45.15, 51.7, 48.44, 54.6, 53.1],\n    };\n\n    const averageSpotifyDatasets = {\n      acousticness: [28.03, 28.99, 27.19, 28.93, 24.74],\n      danceability: [60, 61.23, 66.5, 64.42, 67.31],\n      energy: [59.29, 58.67, 59.06, 57.88, 61.19],\n      valence: [43.08, 41.45, 44.71, 46.59, 48.28],\n    };\n    console.log(graphData);\n    for (const feature in graphData) {\n      formattedData[feature] = {\n        labels: [\"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\n        datasets: [\n          {\n            data: graphData[feature],\n            label: \"Your Top Songs\",\n            fill: true,\n            borderColor: \"rgba(29,185,84,1)\",\n            backgroundColor: \"rgba(29,185,84,0.4)\",\n            spanGaps: false,\n          },\n          {\n            data: averageSpotifyDatasets[feature],\n            label: \"Average Song\",\n            fill: false,\n            borderColor: \"rgba(255, 255, 255, 0.9)\",\n          },\n          {\n            data: topSpotifyDatasets[feature],\n            label: \"Top Spotify Songs\",\n            fill: false,\n            borderColor: \"rgba(255,99,132,1)\",\n          },\n        ],\n      };\n    }\n    console.log(formattedData);\n    this.setState({ formattedData: formattedData, isLoading: false });\n    this.props.load();\n  }\n  render() {\n    const chartDescriptions = {\n      valence:\n        \"Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive, while tracks with low valence sound more negative.\",\n      danceability:\n        \"Describes how suitable a track is for dancing based on a combination of musical elements.\",\n      energy:\n        \"Represents a perceptual measure of intensity and activity based on dynamic range, general entropy, etc.\",\n      acousticness:\n        \"A confidence measure from 0 to 100 of whether the track is acoustic. 100 represents high confidence the track is acoustic.\",\n    };\n    return (\n      !this.state.isLoading && (\n        <div>\n          <Container fluid=\"lg\">\n            <header>Your Vibe</header>\n            <Row className=\"mt-4 mb-4\">\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Valence (Happiness)\"\n                  description={chartDescriptions.valence}\n                  data={this.state.formattedData.valence}\n                />\n              </Col>\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Danceability\"\n                  description={chartDescriptions.danceability}\n                  data={this.state.formattedData.danceability}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Energy\"\n                  description={chartDescriptions.energy}\n                  data={this.state.formattedData.energy}\n                />\n              </Col>\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Acousticness\"\n                  description={chartDescriptions.acousticness}\n                  data={this.state.formattedData.acousticness}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <hr />\n        </div>\n      )\n    );\n  }\n}\n\nexport default VibeDashboard;\n","import React, { Component } from \"react\";\nimport \"../../progress-circle.css\";\nimport Col from \"react-bootstrap/Col\";\n\nclass PopularityDisplay extends Component {\n  render() {\n    let { score } = this.props;\n    const ranges = [0, 30, 50, 70, 90, 100];\n    const descriptions = [\n      \"Hipster\",\n      \"Eccentric\",\n      \"Trendy\",\n      \"Mainstream\",\n      \"Basic\",\n    ];\n    const emojis = [\"🧐\", \"🤔\", \"😎\", \"🤩\", \"💁‍♀️\"];\n    let description, emoji;\n\n    for (let i = 0; i < ranges.length - 1; i++) {\n      const lowerBound = ranges[i];\n      const upperBound = ranges[i + 1];\n      if (score >= lowerBound && score < upperBound) {\n        description = descriptions[i];\n        emoji = emojis[i];\n        break;\n      }\n    }\n\n    return (\n      <Col className=\"d-flex flex-column justify-content-center h-100\">\n        <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n          <path\n            className=\"circle-bg\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <path\n            className=\"circle\"\n            strokeDasharray=\"60, 100\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".35em\"\n            className=\"percentage\"\n          >\n            {Math.round(score)}\n          </text>\n        </svg>\n        <h3>{\"Popularity Score:\"}</h3>\n        <h3>{`${description} ${emoji}`}</h3>\n      </Col>\n    );\n  }\n}\n\nexport default PopularityDisplay;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport function ImageCarousel(props) {\n  const carouselItems = props.images.map((image) => (\n    <Carousel.Item key={image.id}>\n      <img src={image.url} alt=\"album cover\" />\n    </Carousel.Item>\n  ));\n  return (\n    <Carousel indicators={false} controls={false} fade={false}>\n      {carouselItems}\n    </Carousel>\n  );\n}\n","import React from \"react\";\nimport Chart from \"chart.js\";\nChart.defaults.global.defaultFontColor = \"white\";\n//Chart.defaults.global.defaultColor = \"white\";\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    const { data } = this.props;\n    const limit = 10;\n    let formattedData = {\n      labels: [],\n      data: [],\n    };\n\n    for (let i = 0; i < data.length && i < limit; i++) {\n      formattedData.labels.push(data[i].key);\n      formattedData.data.push(data[i].value);\n    }\n    if (data.length >= limit) {\n      let sum = 0;\n      for (let i = limit; i < data.length; i++) {\n        sum += data[i].value;\n      }\n      formattedData.labels.push(\"Other\");\n      formattedData.data.push(sum);\n    }\n\n    const sum = formattedData.data.reduce((a, b) => a + b, 0);\n    formattedData.data = formattedData.data.map((item) =>\n      Math.round((item / sum) * 100)\n    );\n\n    new Chart(this.chartRef.current, {\n      type: \"doughnut\",\n      data: {\n        labels: formattedData.labels,\n        datasets: [\n          {\n            label: \"Genres\",\n            backgroundColor: [\n              \"rgba(255, 221, 0, 0.8)\",\n              \"rgba(255, 200, 0, 0.8)\",\n              \"rgba(255,166,0, 0.8)\",\n              \"rgba(255,124,67, 0.8)\",\n              \"rgba(249,93,106, 0.8)\",\n              \"rgba(212,80,135, 0.8)\",\n              \"rgba(160,81,149, 0.8)\",\n              \"rgba(102,81,145, 0.8)\",\n              \"rgba(47,75,124, 0.8)\",\n              \"rgba(29, 52, 130, 0.8)\",\n              \"rgba(10, 36, 66, 0.8)\",\n            ],\n            borderColor: [\n              \"rgba(255, 221, 0, 1)\",\n              \"rgba(255, 200, 0, 1)\",\n              \"rgba(255,166,0, 1)\",\n              \"rgba(255,124,67, 1)\",\n              \"rgba(249,93,106, 1)\",\n              \"rgba(212,80,135, 1)\",\n              \"rgba(160,81,149, 1)\",\n              \"rgba(102,81,145, 1)\",\n              \"rgba(47,75,124, 1)\",\n              \"rgba(29, 52, 130, 1)\",\n              \"rgba(10, 36, 66, 1)\",\n            ],\n            data: formattedData.data,\n          },\n        ],\n      },\n      options: {\n        legend: {\n          position: \"bottom\",\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              return (\n                data[\"labels\"][tooltipItem[\"index\"]] +\n                \": \" +\n                data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] +\n                \"%\"\n              );\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"doughnut-chart-container\">\n        <canvas ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Row from \"react-bootstrap/Row\";\n\nclass PercentDisplay extends Component {\n  render() {\n    let { percent, descriptions, emojis } = this.props;\n    let description = \"\";\n    let arrow, emoji;\n    if (percent < 0) {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltDown}\n          size=\"lg\"\n          color=\"red\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[0];\n    } else if (percent === 0) {\n      description = descriptions[1];\n    } else {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltUp}\n          size=\"lg\"\n          color=\"rgba(73, 209, 0, 1)\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[2];\n    }\n\n    if (percent > 100) {\n      emoji = emojis[emojis.length - 1];\n    } else if (percent < -100) {\n      emoji = emojis[0];\n    } else {\n      const rangeSize = 200 / emojis.length;\n      const index = Math.floor((percent + 100) / rangeSize);\n      emoji = emojis[index];\n    }\n\n    return (\n      <div className=\"mb-3\">\n        <span className=\"emoji\"> {emoji} </span>\n        <Row className=\"d-flex flex-direction-column justify-content-center align-items-center\">\n          {arrow}\n          <h2>{Math.abs(percent)}%</h2>\n        </Row>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nexport default PercentDisplay;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport PercentDisplay from \"./PercentDisplay\";\n\nexport default function FeaturesDisplay(props) {\n  const { valence, danceability, energy, acousticness } = props.percentages;\n  return (\n    <Row className=\"flex-grow-1\">\n      <hr />\n      <Col md={3}>\n        <PercentDisplay\n          percent={valence}\n          descriptions={[\"Less happy\", \"Same hapiness\", \"Happier\"]}\n          emojis={[\"😭\", \"😢\", \"😕\", \"😃\", \"😁\", \"😊\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={danceability}\n          descriptions={[\n            \"Less danceable\",\n            \"Same danceability\",\n            \"More danceable\",\n          ]}\n          emojis={[\"💃\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={energy}\n          descriptions={[\"Less energetic\", \"Same energy\", \"More energetic\"]}\n          emojis={[\"😴\", \"⚡️\", \"🔥\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={acousticness}\n          descriptions={[\"Less acoustic\", \"Same acousticness\", \"More acoustic\"]}\n          emojis={[\"🎸\", \"🎻\"]}\n        />\n      </Col>\n      <hr />\n    </Row>\n  );\n}\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport PopularityDisplay from \"./PopularityDisplay\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport DoughnutChart from \"./DoughnutChart\";\nimport FeaturesDisplay from \"./FeaturesDisplay\";\n\nclass MoodDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      percentages: {},\n      popularity: 0,\n      trackImages: [],\n    };\n  }\n\n  /**\n   * Gets an array of 50 tracks that the user recently played\n   * @return {Array<SimpleTrack>} - An array of simple track objects from Spotify\n   */\n  async getRecentTracks() {\n    const endpoint = \"https://api.spotify.com/v1/me/player/recently-played\";\n\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        limit: 50,\n      },\n    });\n    return res.data.items;\n  }\n\n  /**\n   * Gets the features of an array of tracks\n   * @param  {Array<SimpleTrackObject>} tracks - An array of Spotify tracks to analyze\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, valence, and popularity properties\n   */\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/audio-features\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((trackFeatures) => {\n      const { id, acousticness, danceability, energy, valence } = trackFeatures;\n      const correspondingTrack = tracks.find((item) => item.track.id === id);\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n        popularity: correspondingTrack.track.popularity,\n      });\n    });\n\n    return results;\n  }\n\n  /**\n   * Computes the averages of an array of features of tracks\n   * @param  {Array<Features>} tracks - An array of track features\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, and valence properties\n   */\n  averageFeatures(tracks) {\n    let averages = {};\n    tracks.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          if (!averages[key]) {\n            averages[key] = track[key];\n          } else {\n            averages[key] += track[key];\n          }\n        }\n      }\n    });\n    for (let key in averages) {\n      averages[key] = averages[key] / tracks.length;\n    }\n    return averages;\n  }\n\n  /**\n   * Searches spotify for a playlist given search terms and the owner\n   * @param  {Array<string>} searchTerms - An array of search terms\n   * @param {string} owner - The owner of the playlist\n   * @return playlist object with id and name fields\n   */\n  async searchForPlaylist(searchTerms, owner) {\n    const endpoint = \"https://api.spotify.com/v1/search\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        q: searchTerms.join(\"%20\"),\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n    const result = res.data.playlists.items.filter((item) => {\n      let isTermInName = true;\n      // Checks if search terms are in the name of the playlist\n      searchTerms.forEach((term) => {\n        isTermInName =\n          isTermInName && item.name.toLowerCase().includes(term.toLowerCase());\n      });\n      // If the search terms in name and owner matches playlist owner name return item\n      return (\n        isTermInName &&\n        item.owner.display_name.toLowerCase().includes(owner.toLowerCase())\n      );\n    });\n    return result;\n  }\n\n  /**\n   * Gets details of a playlist given the id\n   * @param  {string} id - The id of the playlist\n   * @return an object containing the name and tracks of the playlist\n   */\n  async getPlaylist(id) {\n    const endpoint = \"https://api.spotify.com/v1/playlists/\";\n    let res = await axios.get(`${endpoint}${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        fields: \"name,tracks.items(track)\",\n      },\n    });\n    return {\n      name: res.data.name,\n      tracks: res.data.tracks.items,\n    };\n  }\n\n  /**\n   * Returns the percent difference between the properties the newObject compared to the properties of the originalObject.\n   * @param  {Object} originalObject- The original object that will be compared against\n   * @param  {Object} newObject- The new object that will be compared to the original object\n   * @return An object containing the same properties with the percent difference as values\n   */\n  calculatePercentDifferences(originalObject, newObject) {\n    let differences = {};\n    for (const key in originalObject) {\n      const percentDifference = Math.round(\n        ((newObject[key] - originalObject[key]) / originalObject[key]) * 100\n      );\n      differences[key] = percentDifference;\n    }\n    return differences;\n  }\n\n  async getGeneres(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.artists[0].id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/artists\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let map = new Map();\n    res.data.artists.forEach((artist) => {\n      // artist.genres.forEach((genre) => {\n      //   if (map.get(genre)) {\n      //     map.set(genre, map.get(genre) + 1);\n      //   } else {\n      //     map.set(genre, 1);\n      //   }\n      // });\n      const genre = artist.genres[0];\n      if (genre && map.get(genre)) {\n        map.set(genre, map.get(genre) + 1);\n      } else {\n        map.set(genre, 1);\n      }\n    });\n\n    let results = [];\n    map.forEach((val, key) => {\n      results.push({\n        key: key,\n        value: val,\n      });\n    });\n    // Sort in decreasing value order\n    results.sort((a, b) => b.value - a.value);\n    return results;\n  }\n\n  async componentDidMount() {\n    try {\n      const recentTracks = await this.getRecentTracks();\n      const recentTracksFeatures = await this.getTrackFeatures(recentTracks);\n      const averageRecentFeatures = this.averageFeatures(recentTracksFeatures);\n\n      const uniqueTracks = Array.from(\n        new Set(recentTracks.map((item) => item.track.id))\n      ).map((id) => {\n        return recentTracks.find((item) => item.track.id === id);\n      });\n      const trackImages = uniqueTracks.map((item) => {\n        return {\n          id: item.track.id,\n          url: item.track.album.images[0].url,\n        };\n      });\n\n      const genres = await this.getGeneres(recentTracks);\n\n      const searchResults = await this.searchForPlaylist(\n        [\"Today's top hits\"],\n        \"Spotify\"\n      );\n      const playlistID = searchResults[0].id;\n      const playlist = await this.getPlaylist(playlistID);\n      const playlistFeatures = await this.getTrackFeatures(playlist.tracks);\n      const averagePlaylistFeatures = this.averageFeatures(playlistFeatures);\n      const differences = this.calculatePercentDifferences(\n        averagePlaylistFeatures,\n        averageRecentFeatures\n      );\n      const popularityScore = averageRecentFeatures.popularity;\n      this.setState({\n        percentages: differences,\n        popularity: popularityScore,\n        trackImages: trackImages,\n        genres: genres,\n        isLoading: false,\n      });\n      this.props.load();\n    } catch (error) {\n      console.log(error);\n      this.props.handleTimeout();\n    }\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <Container fluid className=\" d-flex flex-column mood-top-section\">\n          <header>Your Mood</header>\n          <h3>How do your recent songs compare to today's top hits?</h3>\n          <Row className=\"d-flex justify-content-center mt-2\">\n            <Col\n              md={{ span: 6, order: 2 }}\n              className=\"d-flex flex-column justify-content-center h-100\"\n            >\n              <ImageCarousel images={this.state.trackImages} />\n            </Col>\n            <Col md={{ span: 6, order: 1 }}>\n              <PopularityDisplay score={this.state.popularity} />\n            </Col>\n          </Row>\n          <FeaturesDisplay percentages={this.state.percentages} />\n        </Container>\n        <Container\n          fluid\n          className=\" d-flex flex-column\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <Row>\n            <Col className=\"justify-content-center\">\n              <h2>{\"Your Recent Genres\"}</h2>\n              <DoughnutChart data={this.state.genres} />\n            </Col>\n          </Row>\n        </Container>\n\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default MoodDashboard;\n","import React from \"react\";\nimport cassette from \"../Assets/cassette.gif\";\n\nexport default function Loading() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <img\n        src={cassette}\n        style={{ maxHeight: \"50vh\", maxWidth: \"90vw\" }}\n        alt=\"Cassette spinning loading animation\"\n      />\n      <h1>Loading your vibe...</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../result.css\";\n\nfunction ResultItem(props) {\n  const {\n    type,\n    position,\n    title,\n    subtitle,\n    searchTerm,\n    image,\n    previewURL,\n  } = props;\n\n  // Track name does not contain the search term\n  const termNotInTitle = title.toLowerCase().indexOf(searchTerm) === -1;\n  // Artist name does not contain the search term\n  const termNotInSubtitle = subtitle.toLowerCase().indexOf(searchTerm) === -1;\n\n  // If search term not in track then do not render\n  if (termNotInTitle && termNotInSubtitle) {\n    return null;\n  }\n\n  const item = (\n    <div className=\"result-item\">\n      <span className=\"order-number\">{position}</span>\n      <span className=\"result-info\">\n        <span\n          className=\"result-cover\"\n          style={{ backgroundImage: `url(${image})` }}\n        ></span>\n        <span className=\"result-summary\">\n          <span className=\"result-artist\">{subtitle}</span>\n          <span className=\"result-name\">{title}</span>\n        </span>\n      </span>\n    </div>\n  );\n\n  return type === \"track\" ? (\n    <div onClick={() => props.playTrack(previewURL)}>{item}</div>\n  ) : (\n    <div>{item}</div>\n  );\n}\n\nexport default ResultItem;\n","import React from \"react\";\nimport ResultItem from \"./ResultItem\";\n\nclass ResultTable extends React.Component {\n  playTrack(previewURL) {\n    let activeTrack = document.querySelector(\"audio\");\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.volume = 0.25;\n      document.getElementById(\"result-table\").append(activeTrack);\n      activeTrack.play();\n    } else {\n      activeTrack.paused ? activeTrack.play() : activeTrack.pause();\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n      }\n    }\n  }\n\n  render() {\n    let results;\n    if (this.props.topType === \"tracks\") {\n      results = this.props.topTracks.map((track, index) => (\n        <ResultItem\n          type=\"track\"\n          position={index + 1}\n          key={track.id}\n          title={track.name}\n          subtitle={track.artists[0].name}\n          image={track.album.images[0].url}\n          previewURL={track.preview_url}\n          searchTerm={this.props.searchTerm}\n          playTrack={this.playTrack}\n        />\n      ));\n    } else {\n      results = this.props.topArtists.map((artist, index) => (\n        <ResultItem\n          type=\"artist\"\n          position={index + 1}\n          key={artist.id}\n          title={artist.name}\n          subtitle={artist.genres.join(\", \")}\n          image={artist.images[0].url}\n          searchTerm={this.props.searchTerm}\n        />\n      ));\n    }\n\n    return (\n      <div id=\"result-table\">\n        {results ? (\n          results\n        ) : (\n          <h3 className=\"no-results\" style={{ alignSelf: \"center\" }}>\n            No Results\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResultTable;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nclass SearchBar extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Row className=\"d-flex justify-content-between p-4\">\n          <Col md={4} className=\"mb-4\">\n            <input\n              className=\"search-field\"\n              name=\"searchTerm\"\n              value={this.props.searchTerm}\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={(e) => this.props.handleChange(e)}\n            ></input>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"short_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"short_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.time_range === \"short_term\"}\n                defaultChecked\n              >\n                Last Month\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"medium_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"medium_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"medium_term\"}\n              >\n                Last 6 Months\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"long_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"long_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"long_term\"}\n              >\n                All Time\n              </Button>\n            </ButtonGroup>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"tracks\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"tracks\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"tracks\"}\n                defaultChecked\n              >\n                Tracks\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"artists\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"artists\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"artists\"}\n                defaultChecked\n              >\n                Artists\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport ResultTable from \"./ResultTable\";\nimport SearchBar from \"./SearchBar\";\nimport axios from \"axios\";\n\nclass FavoritesDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      topTracks: [],\n      topArtists: [],\n      audioAnalysis: [],\n      timeRange: \"short_term\",\n      searchTerm: \"\",\n      topType: \"tracks\",\n    };\n  }\n\n  handleChange = async (event) => {\n    const { name, value, type, checked } = event.target;\n    (await type) === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n    if (name === \"timeRange\") {\n      this.refreshData();\n    }\n  };\n\n  getTopArtists = async () => {\n    const endpoint = \"https://api.spotify.com/v1/me/top/artists\"\n    const response = await axios\n      .get(endpoint, {\n        headers: {\n          Authorization: `Bearer ${this.props.token}`,\n        },\n        params: {\n          time_range: this.state.timeRange,\n          limit: 50,\n        },\n      })\n    this.setState({ topArtists: response.data.items });\n  };\n\n  getTopTracks = async () => {\n    try {\n      const response = await axios\n        .get(\"https://api.spotify.com/v1/me/top/tracks\", {\n          headers: {\n            Authorization: `Bearer ${this.props.token}`,\n          },\n          params: {\n            time_range: this.state.timeRange,\n            limit: 50,\n          },\n        })\n      this.setState({ topTracks: response.data.items });\n    } catch (error) {\n      console.log(\"getTopTracksError: \", error)\n    }\n  };\n\n  refreshData = () => {\n    this.getTopArtists();\n    this.getTopTracks();\n  };\n\n  async componentDidMount() {\n    await this.getTopArtists();\n    await this.getTopTracks();\n    this.setState({ isLoading: false });\n    this.props.load();\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <header>Your Favorites</header>\n        <SearchBar\n          handleChange={this.handleChange}\n          timeRange={this.state.timeRange}\n          topType={this.state.topType}\n        />\n        <ResultTable\n          topType={this.state.topType}\n          topTracks={this.state.topTracks}\n          topArtists={this.state.topArtists}\n          searchTerm={this.state.searchTerm}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FavoritesDisplay;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport VibeDashboard from \"../Components/Vibe/VibeDashboard\";\nimport MoodDashboard from \"../Components/Mood/MoodDashboard\";\nimport Loading from \"../Components/Loading\";\nimport FavoritesDisplay from \"../Components/Favorites/FavoritesDisplay\";\nclass MainDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      moodDashboardIsLoading: true,\n      vibeDashboardIsLoading: true,\n      favoritesDisplayIsLoading: true,\n    };\n  }\n\n  updateLoadingStatus() {\n    if (\n\n      !this.state.moodDashboardIsLoading &&\n      !this.state.vibeDashboardIsLoading &&\n      !this.state.favoritesDisplayIsLoading\n\n    ) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n  loadMoodDashboard() {\n    this.setState({\n      moodDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  loadVibeDashboard() {\n    this.setState({\n      vibeDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  loadFavorites() {\n    this.setState({\n      favoritesDisplayIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading && <Loading />}\n        <Container fluid=\"lg\">\n          <MoodDashboard\n            token={this.props.token}\n            load={() => this.loadMoodDashboard()}\n            handleTimeout={() => this.props.handleTimeout()}\n          />\n\n          <VibeDashboard\n            token={this.props.token}\n            load={() => this.loadVibeDashboard()}\n          />\n          <FavoritesDisplay\n            token={this.props.token}\n            load={() => this.loadFavorites()}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainDisplay;\n","import React from \"react\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport { loginURL } from \"./config\";\n\nimport Login from \"./Views/Login\";\nimport MainDisplay from \"./Views/MainDisplay\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      token: null,\n    };\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  handleLogin() {\n    window.location.replace(loginURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <Login\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={() => this.handleLogin()}\n          />\n        )}\n        {this.state.token && (\n          <MainDisplay\n            token={this.state.token}\n            handleTimeout={() => this.handleLogin()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}