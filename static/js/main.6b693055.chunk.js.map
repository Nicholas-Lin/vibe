{"version":3,"sources":["Assets/cassette.gif","hash.js","config.js","Components/SubmitButton.js","Components/SoundWave.js","Views/Login.js","Components/Vibe/LineChart.js","Api.js","Components/Vibe/VibeDashboard.js","Components/Mood/PopularityDisplay.js","Components/Mood/ImageCarousel.js","Components/Mood/DoughnutChart.js","Components/Mood/PercentDisplay.js","Components/Mood/FeaturesDisplay.js","Components/Mood/MoodDashboard.js","Components/Loading.js","Components/Favorites/ResultItem.js","Components/Favorites/ResultTable.js","Components/Favorites/SearchBar.js","Components/Favorites/FavoritesDisplay.js","Views/MainDisplay.js","App.js","index.js"],"names":["module","exports","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","loginURL","process","join","SubmitButton","this","props","isLoggedIn","Button","className","variant","onClick","handleLogin","React","Component","SoundWave","Login","Container","Col","href","Chart","defaults","global","defaultFontColor","defaultColor","scale","gridLines","color","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","LineChart","chartRef","createRef","current","type","data","labels","datasets","map","dataset","label","borderColor","borderWidth","fill","backgroundColor","pointBackgroundColor","pointBorderWidth","pointBorderColor","pointRadius","pointHitRadius","pointHoverBackgroundColor","pointHoverBorderColor","options","maintainAspectRatio","tooltips","mode","intersect","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasetIndex","Math","round","yLabel","title","description","ref","Api","api_token","token","time_range","limit","endpoint","axios","get","headers","Authorization","params","response","items","searchTerms","owner","q","res","result","playlists","filter","isTermInName","forEach","term","name","toLowerCase","includes","display_name","id","fields","tracks","ids","push","track","results","audio_features","trackFeatures","acousticness","danceability","energy","valence","correspondingTrack","find","popularity","VibeDashboard","state","features","isLoading","API","searchForPlaylist","searchResults","Promise","all","a","getPlaylist","year","pop","playlist","setState","getTrackFeatures","playlistFeatures","computeFeatures","getUserFavorites","recentPlaylist","createGraphData","averageFeatures","key","Number","EPSILON","averages","graphData","sortedByYearFeatures","concat","sort","b","localeCompare","console","log","unshift","formattedData","topSpotifyDatasets","averageSpotifyDatasets","feature","spanGaps","load","chartDescriptions","fluid","Row","md","PopularityDisplay","emoji","score","ranges","descriptions","emojis","i","viewBox","d","strokeDasharray","y","textAnchor","dy","ImageCarousel","carouselItems","images","image","Carousel","Item","src","url","alt","indicators","controls","fade","DoughnutChart","value","sum","position","responsive","PercentDisplay","arrow","percent","icon","faLongArrowAltDown","size","style","marginRight","faLongArrowAltUp","rangeSize","floor","abs","FeaturesDisplay","percentages","MoodDashboard","trackImages","originalObject","newObject","differences","percentDifference","artists","Map","artist","genre","genres","set","val","getRecentTracks","recentTracks","recentTracksFeatures","averageRecentFeatures","uniqueTracks","Array","from","Set","album","getGenres","playlistID","averagePlaylistFeatures","calculatePercentDifferences","popularityScore","status","handleTimeout","span","order","minHeight","Loading","height","display","flexDirection","alignItems","justifyContent","cassette","maxHeight","maxWidth","ResultItem","subtitle","searchTerm","previewURL","termNotInTitle","indexOf","termNotInSubtitle","backgroundImage","playTrack","ResultTable","activeTrack","document","querySelector","paused","play","pause","currentTime","Audio","volume","getElementById","append","topType","index","preview_url","alignSelf","SearchBar","placeholder","onChange","e","handleChange","ButtonGroup","timeRange","checked","defaultChecked","FavoritesDisplay","event","target","MainDisplay","moodDashboardIsLoading","vibeDashboardIsLoading","favoritesDisplayIsLoading","updateLoadingStatus","Fragment","loadMoodDashboard","loadVibeDashboard","loadFavorites","App","_token","access_token","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.6b693055.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cassette.f720df37.gif\";","/**\n * File Name: hash.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Gets hash parameters from url\n */\n\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n//window.location.hash = \"\";\n\nexport default hash;\n","/**\n * File Name: config.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Sets up configuration for Spotify OAuth request\n */\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Uses environment variables from .env in root directory\nexport const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nexport const redirectUri = process.env.REACT_APP_REDIRECT_URI;\n\nexport const scopes = [\n  \"playlist-read-private\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n];\nexport const loginURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Button\n          className=\"submit-button\"\n          variant=\"success\"\n          onClick={() => this.props.handleLogin()}\n        >\n          Login with Spotify\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport \"../sound-wave.css\";\n\nfunction SoundWave() {\n  return (\n    <div className=\"sound-icon disabled\">\n      <div className=\"sound-wave\">\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n        <i className=\"bar\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default SoundWave;\n","/**\n * File Name: Login.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Login page and landing page of the website\n */\n\nimport React from \"react\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport SoundWave from \"../Components/SoundWave\";\n\nfunction Login(props) {\n  if (props.isLoggedIn) {\n    return null;\n  }\n  return (\n    <Container>\n      <Col className=\"d-flex align-items-center flex-column login justify-content-center\">\n        <header> Vibe </header>\n        <SoundWave />\n        <SubmitButton\n          isLoggedIn={props.isLoggedIn}\n          handleLogin={() => props.handleLogin()}\n        />\n        <h5 className=\"mt-5\">Get insights into your vibe.</h5>\n        <h6 className=\"mt-5\">Your information will not be stored.</h6>\n        <h6>\n          {\" \"}\n          Created by{\" \"}\n          <a href=\"https://nicholas-lin.github.io/\"> Nicholas Lin. </a> Powered\n          by{\" \"}\n          <a href=\"https://developer.spotify.com/documentation/web-api/\">\n            {\" \"}\n            Spotify's API.{\" \"}\n          </a>{\" \"}\n        </h6>\n      </Col>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\nChart.defaults.global.defaultColor = \"white\";\nChart.defaults.scale.gridLines.color = \"rgb(83,83,83)\";\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw: function (ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      let activePoint = this.chart.tooltip._active[0];\n      let ctx = this.chart.ctx;\n      let x = activePoint.tooltipPosition().x;\n      let topY = this.chart.legend.bottom;\n      let bottomY = this.chart.chartArea.bottom;\n\n      // let meta = this.getMeta();\n      // meta.data.forEach((element) => {\n      //   if (element._model.x === x) {\n      //     topY = element._model.y;\n      //     bottomY = y;\n      //   }\n      // });\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = \"rgb(255, 255, 255, 0.5)\";\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    new Chart(this.chartRef.current, {\n      type: \"LineWithLine\",\n      data: {\n        labels: this.props.data.labels,\n        datasets: this.props.data.datasets.map((dataset) => {\n          return {\n            data: dataset.data,\n            label: dataset.label,\n            borderColor: dataset.borderColor,\n            borderWidth: 2,\n            fill: dataset.fill,\n            backgroundColor: dataset.backgroundColor,\n\n            pointBackgroundColor: dataset.borderColor,\n            pointBorderWidth: 1,\n            pointBorderColor: \"black\",\n            pointRadius: 5,\n            pointHitRadius: 6,\n            pointHoverBackgroundColor: \"black\",\n            pointHoverBorderColor: dataset.borderColor,\n          };\n        }),\n      },\n      options: {\n        maintainAspectRatio: false,\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n          titleFontColor: \"black\",\n          bodyFontColor: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          callbacks: {\n            label: function (tooltipItem, data) {\n              var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n\n              if (label) {\n                label += \": \";\n              }\n              label += Math.round(tooltipItem.yLabel);\n              return label;\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Col className=\" h-100 d-flex flex-column justify-content-between align-items-center p-0\">\n        <h3>{this.props.title}</h3>\n        <p>{this.props.description}</p>\n        <div className=\"line-chart-container\">\n          <canvas ref={this.chartRef} />\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default LineChart;\n","import axios from \"axios\";\nclass Api {\n  constructor(api_token) {\n    this.token = api_token;\n  }\n\n  /**\n   * Gets users top tracks/artists in a given time range:\n   * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\n   * @param  {string} type - The type of entity to return. Valid values: artists or tracks.\n   * @param {string} time_range - Over what time frame the affinities are computed. Valid values: long_term, medium_term, short_term\n   * @param {number} limit - The number of entities to return. Default: 20. Minimum: 1. Maximum: 50.\n   * @return An array of track or artists objects\n   */\n  async getUserFavorites(type, time_range, limit = 20) {\n    const endpoint = `https://api.spotify.com/v1/me/top/${type}`;\n    const response = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        time_range: time_range,\n        limit: limit,\n      },\n    });\n    return response.data.items;\n  }\n\n  /**\n   * Searches spotify for a playlist given search terms and the owner\n   * @param  {Array<string>} searchTerms - An array of search terms\n   * @param {string} owner - The owner of the playlist\n   * @return playlist object with id and name fields\n   */\n  async searchForPlaylist(searchTerms, owner) {\n    const endpoint = \"https://api.spotify.com/v1/search\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        q: searchTerms.join(\"%20\"),\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n    const result = res.data.playlists.items.filter((item) => {\n      let isTermInName = true;\n      // Checks if search terms are in the name of the playlist\n      searchTerms.forEach((term) => {\n        isTermInName =\n          isTermInName && item.name.toLowerCase().includes(term.toLowerCase());\n      });\n      // If the search terms in name and owner matches playlist owner name return item\n      return (\n        isTermInName &&\n        item.owner.display_name.toLowerCase().includes(owner.toLowerCase())\n      );\n    });\n    return result;\n  }\n\n  /**\n   * Gets details of a playlist given the id\n   * @param  {string} id - The id of the playlist\n   * @return an object containing the name and tracks of the playlist\n   */\n  async getPlaylist(id) {\n    const endpoint = \"https://api.spotify.com/v1/playlists/\";\n    let res = await axios.get(`${endpoint}${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        fields: \"name,tracks.items(track)\",\n      },\n    });\n    return {\n      name: res.data.name,\n      tracks: res.data.tracks.items,\n    };\n  }\n\n  /**\n   * Gets an array of 50 tracks that the user recently played\n   * @return {Array<SimpleTrack>} - An array of simple track objects from Spotify\n   */\n  async getRecentTracks() {\n    const endpoint = \"https://api.spotify.com/v1/me/player/recently-played\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        limit: 50,\n      },\n    });\n    return res.data.items;\n  }\n\n  /**\n   * Gets the features of an array of tracks\n   * @param  {Array<SimpleTrackObject>} tracks - An array of Spotify tracks to analyze\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, valence, and popularity properties\n   */\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/audio-features\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((trackFeatures) => {\n      const { id, acousticness, danceability, energy, valence } = trackFeatures;\n      const correspondingTrack = tracks.find((item) => item.track.id === id);\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n        popularity: correspondingTrack.track.popularity,\n      });\n    });\n    return results;\n  }\n}\n\nexport default Api;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport Api from \"../../Api\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass VibeDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: this.props.token,\n      data: [],\n      features: [],\n      isLoading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const API = new Api(this.props.token);\n    const searchResults = await API.searchForPlaylist(\n      [\"Your Top Songs\"],\n      \"Spotify\"\n    );\n    await Promise.all(\n      searchResults.map(async (item) => {\n        // If search result is a top track playlist\n        if (item.name.length === 19) {\n          let response = await API.getPlaylist(item.id);\n          const year = response.name.split(\" \").pop();\n          const playlist = {\n            year: year,\n            tracks: response.tracks,\n          };\n          this.setState({\n            data: [...this.state.data, playlist],\n          });\n          const playlistFeatures = await API.getTrackFeatures(playlist.tracks);\n          this.computeFeatures(year, playlistFeatures);\n        }\n      })\n    );\n    let recentPlaylist = await API.getUserFavorites(\n      \"tracks\",\n      \"medium_term\",\n      50\n    );\n    // Workaround for get track features\n    recentPlaylist = recentPlaylist.map((item) => {\n      return { track: item };\n    });\n    const playlistFeatures = await API.getTrackFeatures(recentPlaylist);\n    this.computeFeatures(\"2020\", playlistFeatures);\n    this.createGraphData();\n  }\n\n  computeFeatures(year, playlistFeatures) {\n    let averageFeatures = {\n      acousticness: 0,\n      danceability: 0,\n      energy: 0,\n      valence: 0,\n    };\n    playlistFeatures.forEach((track) => {\n      for (let key in track) {\n        // Workaround for popularity\n        if (key !== \"id\" && key !== \"popularity\") {\n          averageFeatures[key] += track[key];\n        }\n      }\n    });\n    for (let key in averageFeatures) {\n      averageFeatures[key] =\n        Math.round(\n          ((averageFeatures[key] * 100) / playlistFeatures.length +\n            Number.EPSILON) *\n            100\n        ) / 100;\n    }\n    this.setState({\n      features: [\n        ...this.state.features,\n        {\n          year: year,\n          averages: averageFeatures,\n        },\n      ],\n    });\n  }\n\n  createGraphData() {\n    let graphData = {\n      acousticness: [],\n      danceability: [],\n      energy: [],\n      valence: [],\n    };\n    let sortedByYearFeatures = []\n      .concat(this.state.features)\n      .sort((a, b) => a.year.localeCompare(b.year));\n\n    // TESTING\n    // sortedByYearFeatures = [\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2019\",\n    //   },\n    //   {\n    //     averages: {\n    //       acousticness: 1,\n    //       danceability: 1,\n    //       energy: 2,\n    //       valence: 3,\n    //     },\n    //     year: \"2020\",\n    //   },\n    // ];\n\n    console.log(sortedByYearFeatures);\n    sortedByYearFeatures.forEach((year) => {\n      for (let key in year.averages) {\n        graphData[key].push(year.averages[key]);\n      }\n    });\n\n    for (let key in graphData) {\n      while (graphData[key].length < 5) {\n        graphData[key].unshift(null);\n      }\n    }\n\n    console.log(graphData);\n    let formattedData = {};\n\n    const topSpotifyDatasets = {\n      acousticness: [15.88, 16.63, 19.57, 22.16, 21.39],\n      danceability: [63.25, 69.68, 71.65, 71.38, 71.99],\n      energy: [67.24, 66.07, 65.91, 64.06, 65.05],\n      valence: [45.15, 51.7, 48.44, 54.6, 53.1],\n    };\n\n    const averageSpotifyDatasets = {\n      acousticness: [28.03, 28.99, 27.19, 28.93, 24.74],\n      danceability: [60, 61.23, 66.5, 64.42, 67.31],\n      energy: [59.29, 58.67, 59.06, 57.88, 61.19],\n      valence: [43.08, 41.45, 44.71, 46.59, 48.28],\n    };\n    console.log(graphData);\n    for (const feature in graphData) {\n      formattedData[feature] = {\n        labels: [\"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\n        datasets: [\n          {\n            data: graphData[feature],\n            label: \"Your Top Songs\",\n            fill: true,\n            borderColor: \"rgba(29,185,84,1)\",\n            backgroundColor: \"rgba(29,185,84,0.4)\",\n            spanGaps: false,\n          },\n          {\n            data: averageSpotifyDatasets[feature],\n            label: \"Average Song\",\n            fill: false,\n            borderColor: \"rgba(255, 255, 255, 0.9)\",\n          },\n          {\n            data: topSpotifyDatasets[feature],\n            label: \"Top Spotify Songs\",\n            fill: false,\n            borderColor: \"rgba(255,99,132,1)\",\n          },\n        ],\n      };\n    }\n    console.log(formattedData);\n    this.setState({ formattedData: formattedData, isLoading: false });\n    this.props.load();\n  }\n  render() {\n    const chartDescriptions = {\n      valence:\n        \"Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive, while tracks with low valence sound more negative.\",\n      danceability:\n        \"Describes how suitable a track is for dancing based on a combination of musical elements.\",\n      energy:\n        \"Represents a perceptual measure of intensity and activity based on dynamic range, general entropy, etc.\",\n      acousticness:\n        \"A confidence measure from 0 to 100 of whether the track is acoustic. 100 represents high confidence the track is acoustic.\",\n    };\n    return (\n      !this.state.isLoading && (\n        <div>\n          <Container fluid=\"lg\">\n            <header>Your Vibe</header>\n            <Row className=\"mt-4 mb-4\">\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Valence (Happiness)\"\n                  description={chartDescriptions.valence}\n                  data={this.state.formattedData.valence}\n                />\n              </Col>\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Danceability\"\n                  description={chartDescriptions.danceability}\n                  data={this.state.formattedData.danceability}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Energy\"\n                  description={chartDescriptions.energy}\n                  data={this.state.formattedData.energy}\n                />\n              </Col>\n              <Col md={6} className=\"mt-4 mb-4\">\n                <LineChart\n                  title=\"Acousticness\"\n                  description={chartDescriptions.acousticness}\n                  data={this.state.formattedData.acousticness}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <hr />\n        </div>\n      )\n    );\n  }\n}\n\nexport default VibeDashboard;\n","import React, { Component } from \"react\";\nimport \"../../progress-circle.css\";\nimport Col from \"react-bootstrap/Col\";\n\nclass PopularityDisplay extends Component {\n  render() {\n    let { score } = this.props;\n    const ranges = [0, 30, 50, 70, 90, 100];\n    const descriptions = [\n      \"Hipster\",\n      \"Eccentric\",\n      \"Trendy\",\n      \"Mainstream\",\n      \"Basic\",\n    ];\n    const emojis = [\"🧐\", \"🤔\", \"😎\", \"🤩\", \"💁‍♀️\"];\n    let description, emoji;\n\n    for (let i = 0; i < ranges.length - 1; i++) {\n      const lowerBound = ranges[i];\n      const upperBound = ranges[i + 1];\n      if (score >= lowerBound && score < upperBound) {\n        description = descriptions[i];\n        emoji = emojis[i];\n        break;\n      }\n    }\n\n    return (\n      <Col className=\"d-flex flex-column justify-content-center h-100\">\n        <svg viewBox=\"0 0 36 36\" className=\"circular-chart green\">\n          <path\n            className=\"circle-bg\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <path\n            className=\"circle\"\n            strokeDasharray=\"60, 100\"\n            d=\"M18 2.0845\n          a 15.9155 15.9155 0 0 1 0 31.831\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".35em\"\n            className=\"percentage\"\n          >\n            {Math.round(score)}\n          </text>\n        </svg>\n        <h3>{\"Popularity Score:\"}</h3>\n        <h3>{`${description} ${emoji}`}</h3>\n      </Col>\n    );\n  }\n}\n\nexport default PopularityDisplay;\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nexport function ImageCarousel(props) {\n  const carouselItems = props.images.map((image) => (\n    <Carousel.Item key={image.id}>\n      <img src={image.url} alt=\"album cover\" />\n    </Carousel.Item>\n  ));\n  return (\n    <Carousel indicators={false} controls={false} fade={false}>\n      {carouselItems}\n    </Carousel>\n  );\n}\n","import React from \"react\";\nimport Chart from \"chart.js\";\nChart.defaults.global.defaultFontColor = \"white\";\n//Chart.defaults.global.defaultColor = \"white\";\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    const { data } = this.props;\n    const limit = 10;\n    let formattedData = {\n      labels: [],\n      data: [],\n    };\n\n    for (let i = 0; i < data.length && i < limit; i++) {\n      formattedData.labels.push(data[i].key);\n      formattedData.data.push(data[i].value);\n    }\n    if (data.length >= limit) {\n      let sum = 0;\n      for (let i = limit; i < data.length; i++) {\n        sum += data[i].value;\n      }\n      formattedData.labels.push(\"Other\");\n      formattedData.data.push(sum);\n    }\n\n    const sum = formattedData.data.reduce((a, b) => a + b, 0);\n    formattedData.data = formattedData.data.map((item) =>\n      Math.round((item / sum) * 100)\n    );\n\n    new Chart(this.chartRef.current, {\n      type: \"doughnut\",\n      data: {\n        labels: formattedData.labels,\n        datasets: [\n          {\n            label: \"Genres\",\n            backgroundColor: [\n              \"rgba(255, 221, 0, 0.8)\",\n              \"rgba(255, 200, 0, 0.8)\",\n              \"rgba(255,166,0, 0.8)\",\n              \"rgba(255,124,67, 0.8)\",\n              \"rgba(249,93,106, 0.8)\",\n              \"rgba(212,80,135, 0.8)\",\n              \"rgba(160,81,149, 0.8)\",\n              \"rgba(102,81,145, 0.8)\",\n              \"rgba(47,75,124, 0.8)\",\n              \"rgba(29, 52, 130, 0.8)\",\n              \"rgba(10, 36, 66, 0.8)\",\n            ],\n            borderColor: [\n              \"rgba(255, 221, 0, 1)\",\n              \"rgba(255, 200, 0, 1)\",\n              \"rgba(255,166,0, 1)\",\n              \"rgba(255,124,67, 1)\",\n              \"rgba(249,93,106, 1)\",\n              \"rgba(212,80,135, 1)\",\n              \"rgba(160,81,149, 1)\",\n              \"rgba(102,81,145, 1)\",\n              \"rgba(47,75,124, 1)\",\n              \"rgba(29, 52, 130, 1)\",\n              \"rgba(10, 36, 66, 1)\",\n            ],\n            data: formattedData.data,\n          },\n        ],\n      },\n      options: {\n        legend: {\n          position: \"bottom\",\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        tooltips: {\n          callbacks: {\n            label: function (tooltipItem, data) {\n              return (\n                data[\"labels\"][tooltipItem[\"index\"]] +\n                \": \" +\n                data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]] +\n                \"%\"\n              );\n            },\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"doughnut-chart-container\">\n        <canvas ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutChart;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Row from \"react-bootstrap/Row\";\n\nclass PercentDisplay extends Component {\n  render() {\n    let { percent, descriptions, emojis } = this.props;\n    let description = \"\";\n    let arrow, emoji;\n    if (percent < 0) {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltDown}\n          size=\"lg\"\n          color=\"red\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[0];\n    } else if (percent === 0) {\n      description = descriptions[1];\n    } else {\n      arrow = (\n        <FontAwesomeIcon\n          icon={faLongArrowAltUp}\n          size=\"lg\"\n          color=\"rgba(73, 209, 0, 1)\"\n          style={{ marginRight: \"0.5em\" }}\n        />\n      );\n      description = descriptions[2];\n    }\n\n    if (percent > 100) {\n      emoji = emojis[emojis.length - 1];\n    } else if (percent < -100) {\n      emoji = emojis[0];\n    } else {\n      const rangeSize = 200 / emojis.length;\n      const index = Math.floor((percent + 100) / rangeSize);\n      emoji = emojis[index];\n    }\n\n    return (\n      <div className=\"mb-3\">\n        <span className=\"emoji\"> {emoji} </span>\n        <Row className=\"d-flex flex-direction-column justify-content-center align-items-center\">\n          {arrow}\n          <h2>{Math.abs(percent)}%</h2>\n        </Row>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n}\n\nexport default PercentDisplay;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport PercentDisplay from \"./PercentDisplay\";\n\nexport default function FeaturesDisplay(props) {\n  const { valence, danceability, energy, acousticness } = props.percentages;\n  return (\n    <Row className=\"flex-grow-1\">\n      <hr />\n      <Col md={3}>\n        <PercentDisplay\n          percent={valence}\n          descriptions={[\"Less happy\", \"Same hapiness\", \"Happier\"]}\n          emojis={[\"😭\", \"😢\", \"😕\", \"😃\", \"😁\", \"😊\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={danceability}\n          descriptions={[\n            \"Less danceable\",\n            \"Same danceability\",\n            \"More danceable\",\n          ]}\n          emojis={[\"💃\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={energy}\n          descriptions={[\"Less energetic\", \"Same energy\", \"More energetic\"]}\n          emojis={[\"😴\", \"⚡️\", \"🔥\"]}\n        />\n      </Col>\n      <Col md={3}>\n        <PercentDisplay\n          percent={acousticness}\n          descriptions={[\"Less acoustic\", \"Same acousticness\", \"More acoustic\"]}\n          emojis={[\"🎸\", \"🎻\"]}\n        />\n      </Col>\n      <hr />\n    </Row>\n  );\n}\n","/**\n * File Name: MoodDashboard.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Displays contents for the \"Your Mood\" section\n */\n\nimport React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport PopularityDisplay from \"./PopularityDisplay\";\nimport { ImageCarousel } from \"./ImageCarousel\";\nimport DoughnutChart from \"./DoughnutChart\";\nimport FeaturesDisplay from \"./FeaturesDisplay\";\nimport Api from \"../../Api\";\n\nclass MoodDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      percentages: {},\n      popularity: 0,\n      trackImages: [],\n    };\n  }\n\n  /**\n   * Computes the averages of an array of features of tracks\n   * @param  {Array<Features>} tracks - An array of track features\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, and valence properties\n   */\n  averageFeatures(tracks) {\n    let averages = {};\n    tracks.forEach((track) => {\n      for (let key in track) {\n        if (key !== \"id\") {\n          if (!averages[key]) {\n            averages[key] = track[key];\n          } else {\n            averages[key] += track[key];\n          }\n        }\n      }\n    });\n    for (let key in averages) {\n      averages[key] = averages[key] / tracks.length;\n    }\n    return averages;\n  }\n\n  /**\n   * Returns the percent difference between the properties the newObject compared to the properties of the originalObject.\n   * @param  {Object} originalObject- The original object that will be compared against\n   * @param  {Object} newObject- The new object that will be compared to the original object\n   * @return An object containing the same properties with the percent difference as values\n   */\n  calculatePercentDifferences(originalObject, newObject) {\n    let differences = {};\n    for (const key in originalObject) {\n      const percentDifference = Math.round(\n        ((newObject[key] - originalObject[key]) / originalObject[key]) * 100\n      );\n      differences[key] = percentDifference;\n    }\n    return differences;\n  }\n\n  /**\n   * Gets the genres for a an array of tracks\n   * @param  {Array<Simple Track Objects>} tracks - The array of tracks to get the genres of\n   * @return An array of objects with key and value properties key=genre, value=track count\n   */\n  async getGenres(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      ids.push(item.track.artists[0].id);\n    });\n    const endpoint = \"https://api.spotify.com/v1/artists\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.props.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let map = new Map();\n    res.data.artists.forEach((artist) => {\n      // artist.genres.forEach((genre) => {\n      //   if (map.get(genre)) {\n      //     map.set(genre, map.get(genre) + 1);\n      //   } else {\n      //     map.set(genre, 1);\n      //   }\n      // });\n\n      // Get the first genre category for each song\n      const genre = artist.genres[0];\n      if (genre && map.get(genre)) {\n        map.set(genre, map.get(genre) + 1);\n      } else {\n        map.set(genre, 1);\n      }\n    });\n\n    let results = [];\n    map.forEach((val, key) => {\n      results.push({\n        key: key,\n        value: val,\n      });\n    });\n    // Sort in decreasing value order\n    results.sort((a, b) => b.value - a.value);\n    return results;\n  }\n\n  async componentDidMount() {\n    try {\n      const API = new Api(this.props.token);\n\n      const recentTracks = await API.getRecentTracks();\n      const recentTracksFeatures = await API.getTrackFeatures(recentTracks);\n      const averageRecentFeatures = this.averageFeatures(recentTracksFeatures);\n      const uniqueTracks = Array.from(\n        new Set(recentTracks.map((item) => item.track.id))\n      ).map((id) => {\n        return recentTracks.find((item) => item.track.id === id);\n      });\n      const trackImages = uniqueTracks.map((item) => {\n        return {\n          id: item.track.id,\n          url: item.track.album.images[0].url,\n        };\n      });\n\n      const genres = await this.getGenres(recentTracks);\n\n      const searchResults = await API.searchForPlaylist(\n        [\"Today's top hits\"],\n        \"Spotify\"\n      );\n      const playlistID = searchResults[0].id;\n      const playlist = await API.getPlaylist(playlistID);\n      const playlistFeatures = await API.getTrackFeatures(playlist.tracks);\n      const averagePlaylistFeatures = this.averageFeatures(playlistFeatures);\n      const differences = this.calculatePercentDifferences(\n        averagePlaylistFeatures,\n        averageRecentFeatures\n      );\n      const popularityScore = averageRecentFeatures.popularity;\n      this.setState({\n        percentages: differences,\n        popularity: popularityScore,\n        trackImages: trackImages,\n        genres: genres,\n        isLoading: false,\n      });\n      this.props.load();\n    } catch (error) {\n      console.log(error);\n\n      //If the access token expired\n      if (error.response.status === 401) this.props.handleTimeout();\n    }\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <Container fluid className=\" d-flex flex-column mood-top-section\">\n          <header>Your Mood</header>\n          <h3>How do your recent songs compare to today's top hits?</h3>\n          <Row className=\"d-flex justify-content-center mt-2\">\n            <Col\n              md={{ span: 6, order: 2 }}\n              className=\"d-flex flex-column justify-content-center h-100\"\n            >\n              <ImageCarousel images={this.state.trackImages} />\n            </Col>\n            <Col md={{ span: 6, order: 1 }}>\n              <PopularityDisplay score={this.state.popularity} />\n            </Col>\n          </Row>\n          <FeaturesDisplay percentages={this.state.percentages} />\n        </Container>\n        <Container\n          fluid\n          className=\" d-flex flex-column\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <Row>\n            <Col className=\"justify-content-center\">\n              <h2>{\"Your Recent Genres\"}</h2>\n              <DoughnutChart data={this.state.genres} />\n            </Col>\n          </Row>\n        </Container>\n\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default MoodDashboard;\n","import React from \"react\";\nimport cassette from \"../Assets/cassette.gif\";\n\nexport default function Loading() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <img\n        src={cassette}\n        style={{ maxHeight: \"50vh\", maxWidth: \"90vw\" }}\n        alt=\"Cassette spinning loading animation\"\n      />\n      <h1>Loading your vibe...</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../result.css\";\n\nfunction ResultItem(props) {\n  const {\n    type,\n    position,\n    title,\n    subtitle,\n    searchTerm,\n    image,\n    previewURL,\n  } = props;\n\n  // Track name does not contain the search term\n  const termNotInTitle = title.toLowerCase().indexOf(searchTerm) === -1;\n  // Artist name does not contain the search term\n  const termNotInSubtitle = subtitle.toLowerCase().indexOf(searchTerm) === -1;\n\n  // If search term not in track then do not render\n  if (termNotInTitle && termNotInSubtitle) {\n    return null;\n  }\n\n  const item = (\n    <div className=\"result-item\">\n      <span className=\"order-number\">{position}</span>\n      <span className=\"result-info\">\n        <span\n          className=\"result-cover\"\n          style={{ backgroundImage: `url(${image})` }}\n        ></span>\n        <span className=\"result-summary\">\n          <span className=\"result-artist\">{subtitle}</span>\n          <span className=\"result-name\">{title}</span>\n        </span>\n      </span>\n    </div>\n  );\n\n  return type === \"track\" ? (\n    <div onClick={() => props.playTrack(previewURL)}>{item}</div>\n  ) : (\n    <div>{item}</div>\n  );\n}\n\nexport default ResultItem;\n","import React from \"react\";\nimport ResultItem from \"./ResultItem\";\n\nclass ResultTable extends React.Component {\n  playTrack(previewURL) {\n    let activeTrack = document.querySelector(\"audio\");\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.volume = 0.25;\n      document.getElementById(\"result-table\").append(activeTrack);\n      activeTrack.play();\n    } else {\n      activeTrack.paused ? activeTrack.play() : activeTrack.pause();\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n      }\n    }\n  }\n\n  render() {\n    let results;\n    if (this.props.topType === \"tracks\") {\n      results = this.props.data.map((track, index) => (\n        <ResultItem\n          type=\"track\"\n          position={index + 1}\n          key={track.id}\n          title={track.name}\n          subtitle={track.artists[0].name}\n          image={track.album.images[0].url}\n          previewURL={track.preview_url}\n          searchTerm={this.props.searchTerm}\n          playTrack={this.playTrack}\n        />\n      ));\n    } else {\n      results = this.props.data.map((artist, index) => (\n        <ResultItem\n          type=\"artist\"\n          position={index + 1}\n          key={artist.id}\n          title={artist.name}\n          subtitle={artist.genres.join(\", \")}\n          image={artist.images[0].url}\n          searchTerm={this.props.searchTerm}\n        />\n      ));\n    }\n\n    return (\n      <div id=\"result-table\">\n        {results ? (\n          results\n        ) : (\n          <h3 className=\"no-results\" style={{ alignSelf: \"center\" }}>\n            No Results\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResultTable;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nclass SearchBar extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Row className=\"d-flex justify-content-between p-4\">\n          <Col md={4} className=\"mb-4\">\n            <input\n              className=\"search-field\"\n              name=\"searchTerm\"\n              value={this.props.searchTerm}\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={(e) => this.props.handleChange(e)}\n            ></input>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"short_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"short_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.time_range === \"short_term\"}\n                defaultChecked\n              >\n                Last Month\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"medium_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"medium_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"medium_term\"}\n              >\n                Last 6 Months\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.timeRange === \"long_term\" && \"active\"}\n                type=\"radio\"\n                name=\"timeRange\"\n                value=\"long_term\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.timeRange === \"long_term\"}\n              >\n                All Time\n              </Button>\n            </ButtonGroup>\n          </Col>\n          <Col md={4} className=\"mb-4\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"tracks\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"tracks\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"tracks\"}\n                defaultChecked\n              >\n                Tracks\n              </Button>\n              <Button\n                variant=\"outline-success\"\n                className={this.props.topType === \"artists\" && \"active\"}\n                type=\"radio\"\n                name=\"topType\"\n                value=\"artists\"\n                onClick={(e) => this.props.handleChange(e)}\n                checked={this.props.topType === \"artists\"}\n                defaultChecked\n              >\n                Artists\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport ResultTable from \"./ResultTable\";\nimport SearchBar from \"./SearchBar\";\nimport Api from \"../../Api\";\n\nclass FavoritesDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: [],\n      timeRange: \"short_term\",\n      searchTerm: \"\",\n      topType: \"tracks\",\n    };\n  }\n\n  handleChange = async (event) => {\n    const { name, value, type, checked } = event.target;\n    if (name === \"topType\") {\n      this.setState({ data: [] });\n    }\n    (await type) === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n\n    const API = new Api(this.props.token);\n    const response = await API.getUserFavorites(\n      this.state.topType,\n      this.state.timeRange,\n      50\n    );\n    this.setState({ data: response, isLoading: false });\n  };\n\n  async componentDidMount() {\n    const API = new Api(this.props.token);\n    const response = await API.getUserFavorites(\n      this.state.topType,\n      this.state.timeRange,\n      50\n    );\n    this.setState({ data: response, isLoading: false });\n    this.props.load();\n  }\n\n  render() {\n    return this.state.isLoading ? null : (\n      <div>\n        <header>Your Favorites</header>\n        <SearchBar\n          handleChange={this.handleChange}\n          timeRange={this.state.timeRange}\n          topType={this.state.topType}\n        />\n        <ResultTable\n          topType={this.state.topType}\n          data={this.state.data}\n          searchTerm={this.state.searchTerm}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FavoritesDisplay;\n","/**\n * File Name: MainDisplay.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Main display after login\n */\n\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport VibeDashboard from \"../Components/Vibe/VibeDashboard\";\nimport MoodDashboard from \"../Components/Mood/MoodDashboard\";\nimport Loading from \"../Components/Loading\";\nimport FavoritesDisplay from \"../Components/Favorites/FavoritesDisplay\";\nclass MainDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      moodDashboardIsLoading: true,\n      vibeDashboardIsLoading: true,\n      favoritesDisplayIsLoading: true,\n    };\n  }\n\n  /**\n   * Updates the loading status of the component based on loading status of child components\n   */\n  updateLoadingStatus() {\n    if (\n      !this.state.moodDashboardIsLoading &&\n      !this.state.vibeDashboardIsLoading &&\n      !this.state.favoritesDisplayIsLoading\n    ) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  /**\n   * Updates the loading status of the mood dashboard in the state\n   */\n  loadMoodDashboard() {\n    this.setState({\n      moodDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  /**\n   * Updates the loading status of the vibe dashboard in the state\n   */\n  loadVibeDashboard() {\n    this.setState({\n      vibeDashboardIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  /**\n   * Updates the loading status of the favorites display in the state\n   */\n  loadFavorites() {\n    this.setState({\n      favoritesDisplayIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading && <Loading />}\n        <Container fluid=\"lg\">\n          <MoodDashboard\n            token={this.props.token}\n            load={() => this.loadMoodDashboard()}\n            handleTimeout={() => this.props.handleTimeout()}\n          />\n          <VibeDashboard\n            token={this.props.token}\n            load={() => this.loadVibeDashboard()}\n          />\n          <FavoritesDisplay\n            token={this.props.token}\n            load={() => this.loadFavorites()}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainDisplay;\n","/**\n * File Name: App.js\n * Author: Nicholas Lin\n * Date: 7/11/20\n * Description: Main entrypoint of react app\n */\n\nimport React from \"react\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport { loginURL } from \"./config\";\n\nimport Login from \"./Views/Login\";\nimport MainDisplay from \"./Views/MainDisplay\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      token: null,\n    };\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  handleLogin() {\n    window.location.replace(loginURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <Login\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={() => this.handleLogin()}\n          />\n        )}\n        {this.state.token && (\n          <MainDisplay\n            token={this.state.token}\n            handleTimeout={() => this.handleLogin()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}