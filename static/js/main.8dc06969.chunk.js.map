{"version":3,"sources":["Components/SubmitButton.js","Components/TrackItem.js","Components/ArtistItem.js","Components/ResultTable.js","Components/SearchBar.js","Components/LineChart.js","Components/Dashboard.js","App.js","index.js"],"names":["SubmitButton","this","props","isLoggedIn","handleLogin","Button","className","onClick","handleClick","React","Component","TrackItem","previewURL","playTrack","position","track","searchTerm","albumImgURL","album","images","url","preview_url","termNotInName","name","toLowerCase","indexOf","artists","style","backgroundImage","ArtistItem","artist","genres","imgURL","join","ResultTable","activeTrack","document","querySelector","paused","play","pause","src","currentTime","Audio","volume","getElementById","append","results","topType","topTracks","map","index","key","id","topArtists","alignSelf","SearchBar","initializeData","Row","value","type","placeholder","onChange","e","handleChange","ButtonGroup","variant","timeRange","checked","time_range","defaultChecked","Chart","defaults","global","defaultFontColor","defaultColor","scale","gridLines","color","LineChart","chartRef","createRef","current","data","labels","datasets","dataset","label","borderColor","borderWidth","fill","backgroundColor","options","Col","title","description","ref","width","height","Dashboard","getTopPlaylists","a","axios","get","headers","Authorization","state","token","params","q","limit","res","Promise","all","playlists","items","item","length","Date","parse","owner","display_name","fields","response","year","split","pop","playlist","tracks","setState","getTrackFeatures","playlistFeatures","computeFeatures","recentPlaylist","createGraphData","console","log","features","isLoading","ids","forEach","push","audio_features","acousticness","danceability","energy","valence","averageFeatures","Math","round","Number","EPSILON","averages","graphData","sortedByYearFeatures","concat","sort","b","localeCompare","formattedData","averageDatasets","feature","chartDescriptions","Container","fluid","App","event","target","refreshData","getTopArtists","customParams","then","catch","err","getTopTracks","analyzeTopTracks","audioAnalysis","getHashParams","access_token","authorizationURL","window","location","replace","hashParams","r","hash","substring","exec","decodeURIComponent","basename","exact","path","render","Fragment","ReactDOM"],"mappings":"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","file":"static/js/main.8dc06969.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nclass SubmitButton extends React.Component {\n    handleClick() {\n        if (this.props.isLoggedIn) {\n\n        } else {\n            this.props.handleLogin();\n        }\n    }\n    render() {\n        if(this.props.isLoggedIn){\n            return null;\n        }\n        return (\n            <div>\n                <Button className=\"submit-button\" onClick={() => this.handleClick()}>Login with Spotify</Button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton","import React from \"react\";\nimport \"../track.css\"\n\nclass TrackItem extends React.Component {\n\n    handleClick(previewURL) {\n        this.props.playTrack(previewURL)\n    }\n\n    render() {\n        const { position, track, searchTerm } = this.props;\n        const albumImgURL = track.album.images[0].url;\n        const previewURL = track.preview_url;\n\n        // Track name does not contain the search term\n        const termNotInName = track.name.toLowerCase().indexOf(searchTerm) === -1\n        // Artist name does not contain the search term\n        const termNotInArtist = track.artists[0].name.toLowerCase().indexOf(searchTerm) === -1\n\n        // If search term not in track then do not render\n        if (termNotInArtist && termNotInName) {\n            return null;\n        }\n\n        return (\n            <div onClick={() => this.handleClick(previewURL)}>\n                <a className=\"track-history-item\">\n                    <span className=\"order-number\">{position}</span>\n                    <span className=\"track-info\">\n                        <span className=\"track-cover\" style={{ backgroundImage: `url(${albumImgURL})` }}></span>\n                        <span className=\"track-summary\">\n                            <span className=\"track-artist\">{track.artists[0].name}</span>\n                            <span className=\"track-name\">{track.name}</span>\n                        </span>\n                    </span>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default TrackItem","import React from \"react\";\nimport \"../track.css\"\n\nclass ArtistItem extends React.Component {\n\n    render() {\n        const { position, artist, searchTerm } = this.props;\n        let { name, genres} = artist;\n        const imgURL = artist.images[0].url;\n\n\n        genres = genres.join(\", \");\n\n        // Track name does not contain the search term\n        const termNotInName = name.toLowerCase().indexOf(searchTerm) === -1\n        // Genres do not contain the search term\n        const termNotInGenres = genres.toLowerCase().indexOf(searchTerm) === -1\n\n        // If search term not in track then do not render\n        if (termNotInGenres && termNotInName) {\n            return null;\n        }\n\n        return (\n            <div>\n                <a className=\"track-history-item\">\n                    <span className=\"order-number\">{position}</span>\n                    <span className=\"track-info\">\n                        <span className=\"track-cover\" style={{ backgroundImage: `url(${imgURL})` }}></span>\n                        <span className=\"track-summary\">\n                            <span className=\"track-artist\">{genres}</span>\n                            <span className=\"track-name\">{name}</span>\n                        </span>\n                    </span>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default ArtistItem","import React from \"react\";\nimport TrackItem from \"./TrackItem\";\nimport ArtistItem from \"./ArtistItem\";\nimport \"../index.css\";\n\nclass ResultTable extends React.Component {\n  playTrack(previewURL) {\n    let activeTrack = document.querySelector(\"audio\");\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.volume = 0.25;\n      document.getElementById(\"result-table\").append(activeTrack);\n      activeTrack.play();\n    } else {\n      activeTrack.paused ? activeTrack.play() : activeTrack.pause();\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n      }\n    }\n  }\n\n  render() {\n    let results;\n    if (this.props.topType === \"tracks\") {\n      results = this.props.topTracks.map((track, index) => (\n        <TrackItem\n          position={index + 1}\n          key={track.id}\n          track={track}\n          searchTerm={this.props.searchTerm}\n          playTrack={this.playTrack}\n        />\n      ));\n    } else {\n      results = this.props.topArtists.map((artist, index) => (\n        <ArtistItem\n          position={index + 1}\n          key={artist.id}\n          artist={artist}\n          searchTerm={this.props.searchTerm}\n        />\n      ));\n    }\n    return (\n      <div id=\"result-table\">\n        {results ? (\n          results\n        ) : (\n          <h3 className=\"no-results\" style={{ alignSelf: \"center\" }}>\n            No Results\n          </h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResultTable;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport \"../index.css\";\n\nclass SearchBar extends React.Component {\n  componentDidMount() {\n    this.props.initializeData();\n  }\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Row className=\"d-flex justify-content-between p-4\">\n          <input\n            className=\"search-field\"\n            name=\"searchTerm\"\n            value={this.props.searchTerm}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => this.props.handleChange(e)}\n          ></input>\n          <ButtonGroup>\n            <Button\n              variant=\"outline-light\"\n              className={this.props.timeRange === \"short_term\" && \"active\"}\n              type=\"radio\"\n              name=\"timeRange\"\n              value=\"short_term\"\n              onClick={(e) => this.props.handleChange(e)}\n              checked={this.props.time_range === \"short_term\"}\n              defaultChecked\n            >\n              Last Month\n            </Button>\n            <Button\n              variant=\"outline-light\"\n              className={this.props.timeRange === \"medium_term\" && \"active\"}\n              type=\"radio\"\n              name=\"timeRange\"\n              value=\"medium_term\"\n              onClick={(e) => this.props.handleChange(e)}\n              checked={this.props.timeRange === \"medium_term\"}\n            >\n              Last 6 Months\n            </Button>\n            <Button\n              variant=\"outline-light\"\n              className={this.props.timeRange === \"long_term\" && \"active\"}\n              type=\"radio\"\n              name=\"timeRange\"\n              value=\"long_term\"\n              onClick={(e) => this.props.handleChange(e)}\n              checked={this.props.timeRange === \"long_term\"}\n            >\n              All Time\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button\n              variant=\"outline-light\"\n              className={this.props.topType === \"tracks\" && \"active\"}\n              type=\"radio\"\n              name=\"topType\"\n              value=\"tracks\"\n              onClick={(e) => this.props.handleChange(e)}\n              checked={this.props.topType === \"tracks\"}\n              defaultChecked\n            >\n              Tracks\n            </Button>\n            <Button\n              variant=\"outline-light\"\n              className={this.props.topType === \"artists\" && \"active\"}\n              type=\"radio\"\n              name=\"topType\"\n              value=\"artists\"\n              onClick={(e) => this.props.handleChange(e)}\n              checked={this.props.topType === \"artists\"}\n              defaultChecked\n            >\n              Artists\n            </Button>\n          </ButtonGroup>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Chart from \"chart.js\";\nimport Col from \"react-bootstrap/Col\";\n\nChart.defaults.global.defaultFontColor = \"white\";\nChart.defaults.global.defaultColor = \"white\";\nChart.defaults.scale.gridLines.color = \"rgb(83,83,83)\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n  componentDidMount() {\n    new Chart(this.chartRef.current, {\n      type: \"line\",\n      data: {\n        labels: this.props.data.labels,\n        datasets: this.props.data.datasets.map((dataset) => {\n          return {\n            data: dataset.data,\n            label: dataset.label,\n            borderColor: dataset.borderColor,\n            borderWidth: 2,\n            fill: dataset.fill,\n            backgroundColor: dataset.backgroundColor,\n          };\n        }),\n      },\n      options: {},\n    });\n  }\n\n  render() {\n    return (\n      <Col className=\" h-100 d-flex flex-column justify-content-between\">\n        <h3>{this.props.title}</h3>\n        <p>{this.props.description}</p>\n        <canvas ref={this.chartRef} width=\"400\" height=\"300\" />\n      </Col>\n    );\n  }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport axios from \"axios\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: this.props.token,\n      data: [],\n      features: [],\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getTopPlaylists();\n  }\n\n  getTopPlaylists = async () => {\n    let res = await axios.get(\"\thttps://api.spotify.com/v1/search\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        q: \"Your%20Top%20Songs\",\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n\n    let playlistRequests = [];\n    await Promise.all(\n      res.data.playlists.items.map(async (item) => {\n        // If search result is a top track playlist\n        if (\n          item.name.length === 19 &&\n          Date.parse(item.name) &&\n          item.owner.display_name === \"Spotify\"\n        ) {\n          let response = await axios.get(\n            `https://api.spotify.com/v1/playlists/${item.id}`,\n            {\n              headers: {\n                Authorization: `Bearer ${this.state.token}`,\n              },\n              params: {\n                fields: \"name,tracks.items(track)\",\n              },\n            }\n          );\n          const year = response.data.name.split(\" \").pop();\n          const playlist = {\n            year: year,\n            tracks: response.data.tracks.items,\n          };\n          this.setState({\n            data: [...this.state.data, playlist],\n          });\n          const playlistFeatures = await this.getTrackFeatures(playlist.tracks);\n          this.computeFeatures(year, playlistFeatures);\n        }\n      })\n    );\n    let recentPlaylist = await axios.get(\n      \"https://api.spotify.com/v1/me/top/tracks\",\n      {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`,\n        },\n        params: {\n          time_range: \"medium_term\",\n          limit: 50,\n        },\n      }\n    );\n    const playlistFeatures = await this.getTrackFeatures(\n      recentPlaylist.data.items\n    );\n    this.computeFeatures(\"2020\", playlistFeatures);\n    this.createGraphData();\n    console.log(this.state.features);\n    console.log(this.state.data);\n  };\n  async getTrackFeatures(tracks) {\n    let ids = [];\n    tracks.forEach((item) => {\n      if (item.track) ids.push(item.track.id);\n      else ids.push(item.id);\n    });\n    let res = await axios.get(\"https://api.spotify.com/v1/audio-features\", {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n    res.data.audio_features.forEach((track) => {\n      const { id, acousticness, danceability, energy, valence } = track;\n      results.push({\n        id: id,\n        acousticness: acousticness,\n        danceability: danceability,\n        energy: energy,\n        valence: valence,\n      });\n    });\n    return results;\n  }\n\n  computeFeatures(year, playlistFeatures) {\n    let averageFeatures = {\n      acousticness: 0,\n      danceability: 0,\n      energy: 0,\n      valence: 0,\n    };\n    playlistFeatures.forEach((track) => {\n      for (let key in track) {\n        if (key != \"id\") {\n          averageFeatures[key] += track[key];\n        }\n      }\n    });\n    for (let key in averageFeatures) {\n      averageFeatures[key] =\n        Math.round(\n          (averageFeatures[key] / playlistFeatures.length + Number.EPSILON) *\n            100\n        ) / 100;\n    }\n    this.setState({\n      features: [\n        ...this.state.features,\n        {\n          year: year,\n          averages: averageFeatures,\n        },\n      ],\n    });\n  }\n\n  createGraphData() {\n    let graphData = {\n      acousticness: [],\n      danceability: [],\n      energy: [],\n      valence: [],\n    };\n    let sortedByYearFeatures = []\n      .concat(this.state.features)\n      .sort((a, b) => a.year.localeCompare(b.year));\n\n    sortedByYearFeatures.forEach((year) => {\n      for (let key in year.averages) {\n        graphData[key].push(year.averages[key]);\n      }\n    });\n    let formattedData = {};\n    const averageDatasets = {\n      acousticness: [0.3, 0.3, 0.3, 0.3, 0.3],\n      danceability: [0.65, 0.65, 0.65, 0.65, 0.65],\n      energy: [0.6, 0.6, 0.6, 0.6, 0.6],\n      valence: [0.5, 0.5, 0.5, 0.5, 0.5],\n    };\n\n    for (const feature in graphData) {\n      formattedData[feature] = {\n        labels: sortedByYearFeatures.map((playlist) => playlist.year),\n        datasets: [\n          {\n            data: graphData[feature],\n            label: \"You\",\n            fill: true,\n            borderColor: \"rgba(29,185,84,1)\",\n            backgroundColor: \"rgba(29,185,84,0.4)\",\n          },\n          {\n            data: averageDatasets[feature],\n            label: \"Average\",\n            fill: false,\n            borderColor: \"rgba(255,99,132,1)\",\n          },\n        ],\n      };\n    }\n    this.setState({ formattedData: formattedData, isLoading: false });\n  }\n  render() {\n    const chartDescriptions = {\n      valence:\n        \"A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive, while tracks with low valence sound more negative.\",\n      danceability:\n        \"Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\",\n      energy:\n        \"Represents a perceptual measure of intensity and activity. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\",\n      acousticness:\n        \"A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\",\n    };\n    return this.state.isLoading ? null : (\n      <div>\n        <Container fluid>\n          <Row className=\"mb-4\">\n            <Col>\n              <LineChart\n                title=\"Valence\"\n                description={chartDescriptions.valence}\n                data={this.state.formattedData.valence}\n              />\n            </Col>\n            <Col>\n              <LineChart\n                title=\"Danceability\"\n                description={chartDescriptions.danceability}\n                data={this.state.formattedData.danceability}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mb-4\">\n            <Col>\n              <LineChart\n                title=\"Energy\"\n                description={chartDescriptions.energy}\n                data={this.state.formattedData.energy}\n              />\n            </Col>\n            <Col>\n              <LineChart\n                title=\"Acousticness\"\n                description={chartDescriptions.acousticness}\n                data={this.state.formattedData.acousticness}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport SubmitButton from \"./Components/SubmitButton\";\nimport ResultTable from \"./Components/ResultTable\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Dashboard from \"./Components/Dashboard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    this.state = {\n      isLoggedIn: token ? true : false,\n      topTracks: [],\n      topArtists: [],\n      audioAnalysis: [],\n      timeRange: \"short_term\",\n      token: token,\n      searchTerm: \"\",\n      topType: \"tracks\",\n    };\n  }\n\n  handleLogin() {\n    //const homeURL = \"localhost:3000/vibe/callback\";\n    const homeURL = \"nicholas-lin.github.io/vibe/callback/\";\n    const clientID = \"03448805c58d4c5ba555ea203c8ce771\";\n    const responseType = \"token\";\n    const redirectURI = \"http://\" + homeURL;\n    const scope = \"playlist-read-private%20user-top-read\";\n    const state = \"123\";\n    const authorizationURL = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=${responseType}&redirect_uri=${redirectURI}&scope=${scope}&state=${state}`;\n    window.location.replace(authorizationURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  handleChange = async (event) => {\n    const { name, value, type, checked } = event.target;\n    (await type) === \"checkbox\"\n      ? this.setState({ [name]: checked })\n      : this.setState({ [name]: value });\n    if (name === \"timeRange\") {\n      this.refreshData();\n    }\n  };\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getTopArtists = async () => {\n    let customParams = {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        time_range: this.state.timeRange,\n        limit: 50,\n      },\n    };\n    await axios\n      .get(\"https://api.spotify.com/v1/me/top/artists\", customParams)\n      .then((res) => {\n        this.setState({ topArtists: res.data.items });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getTopTracks = async () => {\n    await axios\n      .get(\"https://api.spotify.com/v1/me/top/tracks\", {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`,\n        },\n        params: {\n          time_range: this.state.timeRange,\n          limit: 50,\n        },\n      })\n      .then((res) => {\n        this.setState({ topTracks: res.data.items });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    await this.analyzeTopTracks();\n  };\n\n  analyzeTopTracks = async () => {\n    let ids = [];\n    this.state.topTracks.forEach((track) => {\n      ids.push(track.id);\n    });\n\n    let customParams = {\n      headers: {\n        Authorization: `Bearer ${this.state.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    };\n    await axios\n      .get(\"https://api.spotify.com/v1/audio-features\", customParams)\n      .then((res) => {\n        res.data.audio_features.forEach((track) => {\n          const { id, acousticness, danceability, energy, valence } = track;\n          this.setState({\n            audioAnalysis: [\n              ...this.state.audioAnalysis,\n              {\n                id: id,\n                acousticness: acousticness,\n                danceability: danceability,\n                energy: energy,\n                valence: valence,\n              },\n            ],\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  refreshData = () => {\n    this.getTopArtists();\n    this.getTopTracks();\n  };\n\n  initializeData = () => {\n    this.getTopArtists();\n    this.getTopTracks();\n  };\n\n  render() {\n    return (\n      <Router basename=\"/vibe\">\n        <div className=\"App\">\n          <Container>\n            <header> Replay </header>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <SubmitButton\n                    isLoggedIn={this.state.isLoggedIn}\n                    handleLogin={() => this.handleLogin()}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/callback\"\n                render={(props) => (\n                  <React.Fragment>\n                    <Dashboard\n                      handleChange={this.handleChange}\n                      initializeData={this.initializeData}\n                      token={this.state.token}\n                    />\n                    <SearchBar\n                      handleChange={this.handleChange}\n                      timeRange={this.state.timeRange}\n                      topType={this.state.topType}\n                      initializeData={this.initializeData}\n                    />\n                    <ResultTable\n                      topType={this.state.topType}\n                      topTracks={this.state.topTracks}\n                      topArtists={this.state.topArtists}\n                      searchTerm={this.state.searchTerm}\n                    />\n                  </React.Fragment>\n                )}\n              />\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}